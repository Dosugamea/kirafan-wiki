{"version":3,"sources":["webpack:///./src/components/cri/afs2.js","webpack:///./src/components/cri/utf.js","webpack:///./src/components/cri/acb.js","webpack:///./src/components/cri/hca.js"],"names":["fs","window","require","util","readFile","promisify","parseAFS2","buffer","async","length","pos","config","magic","slice","toString","unknown1","readUInt8","sizeLen","unknown2","unknown3","fileCount","readUInt32LE","align","readUInt16LE","key","fileIds","i","fileId","push","files","start","console","log","mod","end","exports","findZero","parseUtf","dataSize","readUInt32BE","unknown","readUInt16BE","valueOffset","stringOffset","dataOffset","nameOffset","elementCount","valueSize","pageCount","stringEnd","name","valuePos","pages","types","firstPos","page","j","type","method","value","offset","readInt8","readInt16BE","readInt32BE","readBigInt64BE","readBigUInt64BE","readFloatBE","readDoubleBE","bufferStart","bufferLen","temp","path","afs2","hca","utf","mkdir","parseAcb","acbPath","pathInfo","parse","utfs","Error","acb","AwbFile","memoryHcas","streamHcas","StreamAwbHash","StreamAwb","awbPath","join","dir","Name","existsSync","obj","WaveformTable","Waveform","isMemory","Streaming","StreamAwbPortNo","acb2wavs","wavDir","volume","mode","skip","undefined","recursive","base","index","name_i","prom_list","Version","c_table","SequenceTable","c_key","CueTable","cue","cue_num","hcaBuffer","MemoryAwbId","StreamAwbId","awbKey","CueNameTable","find","x","CueIndex","CueName","wavPath","decodeHcaToWav","Promise","all","acbParse","output","Buffer","writeFile","appendFile","BigInt","initAthTable","table","list","v","last","createTable56","r","mul","add","initCiphTable","key1","key2","t1","alloc","t2","from","t3","t31","t32","k","a","decryptBlock","block","checkSum","data","size","sum","parseHCA","version","fmt","channelCount","samplingRate","blockCount","muteHeader","muteFooter","label","compdec","blockSize","r01","r02","r03","r04","r05","r06","r07","r08","reserve1","reserve2","count1","count2","enableCount2","vbr","vbrPos","vbrR1","vbrR2","ath","athPos","athType","loop","loopPos","loopStart","loopEnd","loopCount","loopR1","ciph","ciphPos","ciphType","rva","rvaPos","comm","commPos","commLen","comment","pad","padPos","athTable","Number","ciphTable","decryptHca","hcaPath","writeUInt32LE","writeUInt16BE","revTable","ceil2","b","Math","floor","initDecode","isComp","comp","r09","c","channels","channel","Float32Array","scale","value2","value3","count","wav1","wav2","wav3","wave","BlockReader","this","bit","mask","bitSize","checkBit","arrayIntToFloat","arrayInt","arrayFloat","readFloatLE","DECODE1","scalelist","valueFloat","scaleFloat","decode1","reader","getBit","v4","v1","v2","v3","fill","DECODE2","list1","list2","list3","decode2","f","s","addBit","DECODE3","listFloat","decode3","d","l","DECODE4","decode4","nextChannel","f1","f2","DECODE5","list1Float","list2Float","list3Float","decode5","d1","d2","w","y","s1","s2","e","decodeBlock","address","decodeHca","n","pcmData","m","writeWavFile","wavRiff","write","wavData","wav","fmtType","fmtChannelCount","fmtBitCount","fmtSamplingRate","fmtSamplingSize","fmtSamplesPerSec","writeUInt16LE","riffSize","concat","once","writeFloatLE","writeInt8","writeInt16LE","writeInt32LE"],"mappings":"2IAAA,IAAMA,EAAKC,OAAOC,QAAQ,MAEpBC,EAAOD,EAAQ,QAIfE,EAAWD,EAAKE,UAAUL,EAAGI,UAInC,SAAeE,EAAUC,GAAzB,gDAAAC,OAAA,oDACyB,kBAAZD,EADb,yDACkDH,EAASG,IAD3D,OACmCA,EADnC,iBAEOA,KAAUA,EAAOE,OAAS,GAFjC,yCAE2C,MAF3C,UAGMC,EAAM,EACJC,EAAS,GACfA,EAAOJ,OAASA,EAChBI,EAAOC,MAAQL,EAAOM,MAAMH,EAAK,GAAGI,WAAYJ,GAAO,EAClC,SAAjBC,EAAOC,MAPb,0CAOsC,MAPtC,QAgBE,IARAD,EAAOI,SAAWR,EAAOS,UAAUN,GAAMA,GAAO,EAChDC,EAAOM,QAAUV,EAAOS,UAAUN,GAAMA,GAAO,EAC/CC,EAAOO,SAAWX,EAAOS,UAAUN,GAAMA,GAAO,EAChDC,EAAOQ,SAAWZ,EAAOS,UAAUN,GAAMA,GAAO,EAChDC,EAAOS,UAAYb,EAAOc,aAAaX,GAAMA,GAAO,EACpDC,EAAOW,MAAQf,EAAOgB,aAAab,GAAMA,GAAO,EAChDC,EAAOa,IAAMjB,EAAOgB,aAAab,GAAMA,GAAO,EAC9CC,EAAOc,QAAU,GACRC,EAAI,EAAGA,EAAIf,EAAOS,UAAWM,IAC9BC,EAASpB,EAAOgB,aAAab,GAAMA,GAAO,EAChDC,EAAOc,QAAQG,KAAKD,GAWtB,IATME,EAAQ,GAES,IAAnBlB,EAAOM,SACTa,EAAQvB,EAAOgB,aAAab,GAAMA,GAAO,GACb,IAAnBC,EAAOM,SAChBa,EAAQvB,EAAOc,aAAaX,GAAMA,GAAO,GACpCqB,QAAQC,IAAI,oBAAsBrB,EAAOM,SAC5CgB,EAAMH,EAAQnB,EAAOW,MACd,GAAPW,IAAUH,GAASnB,EAAOW,MAAQW,GAC7BP,EAAI,EAAGA,EAAIf,EAAOS,UAAWM,IAChCQ,OADqC,EAElB,IAAnBvB,EAAOM,SACTiB,EAAM3B,EAAOgB,aAAab,GAAMA,GAAO,GACX,IAAnBC,EAAOM,SAChBiB,EAAM3B,EAAOc,aAAaX,GAAMA,GAAO,GAClCqB,QAAQC,IAAI,oBAAsBrB,EAAOM,SAChDY,EAAMD,KAAKrB,EAAOM,MAAMiB,EAAOI,IAC/BJ,EAAQI,EACRD,EAAMH,EAAQnB,EAAOW,MACV,GAAPW,IAAUH,GAASnB,EAAOW,MAAQW,GAvC1C,OAyCEJ,EAAMlB,OAASA,EAzCjB,kBA0CSkB,GA1CT,sCA4CAM,EAAQ7B,UAAYA,G,qBCtDpB,SAAS8B,EAAS7B,EAAQuB,GACxB,MAAyB,IAAlBvB,EAAOuB,GAAgBA,IAC9B,OAAOA,EAGT,SAASO,EAAS9B,GAA0B,IAAlBO,EAAkB,wDAC1C,IAAKP,GAAUA,EAAOE,OAAS,EAAG,OAAO,KACzC,IAAIC,EAAM,EACJC,EAAS,GAEf,GADAA,EAAOC,MAAQL,EAAOM,MAAMH,EAAK,GAAGI,WAAYJ,GAAO,EAClC,SAAjBC,EAAOC,MAAkB,OAAO,KACpCD,EAAO2B,SAAW/B,EAAOgC,aAAa7B,GAAMA,GAAO,EACnDH,EAASA,EAAOM,MAAMH,GACtBA,EAAM,EACNC,EAAO6B,QAAUjC,EAAOkC,aAAa/B,GAAMA,GAAO,EAClDC,EAAO+B,YAAcnC,EAAOkC,aAAa/B,GAAMA,GAAO,EACtDC,EAAOgC,aAAepC,EAAOgC,aAAa7B,GAAMA,GAAO,EACvDC,EAAOiC,WAAarC,EAAOgC,aAAa7B,GAAMA,GAAO,EACrDC,EAAOkC,WAAatC,EAAOgC,aAAa7B,GAAMA,GAAO,EACrDC,EAAOmC,aAAevC,EAAOkC,aAAa/B,GAAMA,GAAO,EACvDC,EAAOoC,UAAYxC,EAAOkC,aAAa/B,GAAMA,GAAO,EACpDC,EAAOqC,UAAYzC,EAAOgC,aAAa7B,GAAMA,GAAO,EACpD,IAAIuC,EAAYb,EAAS7B,EAAQI,EAAOgC,cACxChC,EAAOuC,KAAO3C,EAAOM,MAAMF,EAAOgC,aAAcM,GAAWnC,WAC3D,IAAIqC,EAAWxC,EAAO+B,YAChBU,EAAQ,GACdzC,EAAO0C,MAAQ,GAEf,IADA,IAAIC,EAAW5C,EACNgB,EAAI,EAAGA,EAAIf,EAAOqC,UAAWtB,IAAK,CACzC,IAAI6B,EAAO,GACX7C,EAAM4C,EACN,IAAK,IAAIE,EAAI,EAAGA,EAAI7C,EAAOmC,aAAcU,IAAK,CAC5C,IAAIC,EAAOlD,EAAOS,UAAUN,GAAMA,GAAY,EACpC,IAANgB,IAASf,EAAO0C,MAAMG,GAAKC,GAC/B,IAAId,EAAehC,EAAOgC,aAAepC,EAAOgC,aAAa7B,GAAMA,GAAO,EAC1EuC,EAAYb,EAAS7B,EAAQoC,GAC7B,IAAMnB,EAAMjB,EAAOM,MAAM8B,EAAcM,GAAWnC,WAC5C4C,EAASD,IAAS,EACxBA,GAAc,GACd,IAAIE,EAAQ,KACZ,GAAID,EAAS,EAAG,CACd,IAAIE,EAAoB,IAAXF,EAAehD,EAAMyC,EAClC,OAAQM,GACN,KAAK,GAAME,EAAQpD,EAAOsD,SAASD,GAASA,GAAU,EAAG,MACzD,KAAK,GAAMD,EAAQpD,EAAOS,UAAU4C,GAASA,GAAU,EAAG,MAC1D,KAAK,GAAMD,EAAQpD,EAAOuD,YAAYF,GAASA,GAAU,EAAG,MAC5D,KAAK,GAAMD,EAAQpD,EAAOkC,aAAamB,GAASA,GAAU,EAAG,MAC7D,KAAK,GAAMD,EAAQpD,EAAOwD,YAAYH,GAASA,GAAU,EAAG,MAC5D,KAAK,GAAMD,EAAQpD,EAAOgC,aAAaqB,GAASA,GAAU,EAAG,MAC7D,KAAK,GAAMD,EAAQpD,EAAOyD,eAAeJ,GAASA,GAAU,EAAG,MAC/D,KAAK,GAAMD,EAAQpD,EAAO0D,gBAAgBL,GAASA,GAAU,EAAG,MAChE,KAAK,GAAMD,EAAQpD,EAAO2D,YAAYN,GAASA,GAAU,EAAG,MAC5D,KAAK,GAAM7B,QAAQC,IAAI,QAAS2B,EAAQpD,EAAO4D,aAAaP,GAASA,GAAU,EAAG,MAClF,KAAK,GACHjB,EAAehC,EAAOgC,aAAepC,EAAOgC,aAAaqB,GAASA,GAAU,EAC5EX,EAAYb,EAAS7B,EAAQoC,GAC7BgB,EAAQpD,EAAOM,MAAM8B,EAAcM,GAAWnC,WAC9C,MACF,KAAK,GACH,IAAMsD,EAAczD,EAAOiC,WAAarC,EAAOgC,aAAaqB,GAASA,GAAU,EAC/E,IAAMS,EAAY9D,EAAOgC,aAAaqB,GAASA,GAAU,EACzDD,EAAQpD,EAAOM,MAAMuD,EAAaA,EAAcC,GAChD,IAAIC,EAAOjC,EAASsB,EAAO7C,GACvBwD,EAAMX,EAAQW,EAAexD,IAAU6C,EAAQpD,EAAOM,MAAMuD,EAAaA,EAAcC,GAAWvD,SAAS,QAC/G,MACF,QACEiB,QAAQC,IAAR,wBAA6ByB,IAC7B,MAEW,IAAXC,EAAchD,EAAMkD,EAAaT,EAAWS,EAElDL,EAAK/B,GAAOmC,EAEdP,EAAMxB,KAAK2B,GAGb,OADAH,EAAMzC,OAASA,EACRyC,E,8BAETjB,EAAQE,SAAWA,G,+GC7EnB,IAAMkC,EAAOtE,OAAOC,QAAQ,QACtBC,EAAOD,EAAQ,QACfF,EAAKC,OAAOC,QAAQ,MAEpBsE,EAAOtE,EAAQ,QACfuE,EAAMvE,EAAQ,QACdwE,EAAMxE,EAAQ,QAEdE,EAAWD,EAAKE,UAAUL,EAAGI,UAC7BuE,EAAQxE,EAAKE,UAAUL,EAAG2E,OAEhC,SAAeC,EAASC,GAAxB,oDAAArE,OAAA,wDACQsE,EAAWP,EAAKQ,MAAMF,GAD9B,kCAEuBzE,EAASyE,IAFhC,UAEQtE,EAFR,OAGQyE,EAAON,EAAIrC,SAAS9B,GACrByE,EAJP,sBAImB,IAAIC,MAAJ,gBAJnB,UAKsB,IAAhBD,EAAKvE,OALX,sBAK+B,IAAIwE,MAAJ,4BAL/B,cAMQC,EAAMF,EAAK,GACjBE,EAAI3E,OAASA,EAPf,mCAQyBiE,EAAKlE,UAAU4E,EAAIC,UAR5C,QAQED,EAAIE,WARN,OASEF,EAAIG,WAAa,GACR3D,EAAI,EAVf,aAUkBA,EAAIwD,EAAII,cAAc7E,QAVxC,oBAWU8E,EAAYL,EAAII,cAAc5D,GAC9B8D,EAAUjB,EAAKkB,KAAKX,EAASY,IAAKH,EAAUI,KAAO,SACrD3F,EAAG4F,WAAWJ,GAbtB,2DAcwBhB,EAAKlE,UAAUkF,IAdvC,QAcYK,EAdZ,OAeMX,EAAIG,WAAWzD,KAAKiE,GAf1B,QAUgDnE,IAVhD,wBAkBWA,EAAI,EAlBf,aAkBkBA,EAAIwD,EAAIY,cAAcrF,QAlBxC,oBAmBUsF,EAAWb,EAAIY,cAAcpE,GAC7BsE,EAAkC,IAAvBD,EAASE,UACrBD,EArBT,oBAsBWd,EAAIG,WAAWU,EAASG,iBAtBnC,uBAuBc,IAAIjB,MAAJ,kBAAqBC,EAAII,cAAc5D,GAAGiE,KAA1C,SAvBd,QAkBgDjE,IAlBhD,iDA2BSwD,GA3BT,sCA8BA,SAAeiB,EAAStB,EAASrD,EAAK4E,EAAQC,EAAQC,EAAMC,GAA5D,wEAAA/F,OAAA,wDACQsE,EAAWP,EAAKQ,MAAMF,GAD9B,kCAGoBD,EAASC,IAH7B,UAGQK,EAHR,YAIiBsB,IAAXJ,IAAsBA,EAAS7B,EAAKkB,KAAKX,EAASY,IAAKR,EAAIS,OAC1D3F,EAAG4F,WAAWQ,GALrB,0DAMUzB,EAAMyB,EAAQ,CAAEK,WAAW,KANrC,mCAOaF,EAPb,wBAQIxE,QAAQC,IAAR,kBAAuB8C,EAAS4B,KAAhC,QARJ,8BAeMC,EAAQ,EACRC,EAAS,EACPC,EAAY,GAGE,WAAhB3B,EAAI4B,QApBV,iBAqBIC,EAAU7B,EAAI8B,cACdC,EAAQ,YAtBZ,2BAuB6B,WAAhB/B,EAAI4B,QAvBjB,iBAwBIC,EAAU7B,EAAIgC,SACdD,EAAQ,sBAzBZ,8BA2BU,IAAIhC,MAAM,2BA3BpB,QA6BE,IA7BF,6BA6BE,EAAgB8B,EAAhB,+CAAyB,CAEvB,IAFOI,EAAgB,QAEdC,EAAU,EAAGA,EAAUD,EAAIF,GAAQG,IACpC1F,EAAIiF,EACJZ,EAAWb,EAAIY,cAAcpE,GAC7BsE,EAAkC,IAAvBD,EAASE,UAEpBoB,EAAYrB,EACdd,EAAIE,WAAWW,EAASuB,aACxBpC,EAAIG,WAAWU,EAASG,iBAAiBH,EAASwB,aAChDC,EAASxB,EACXd,EAAIE,WAAWzE,OAAOa,IACtB0D,EAAIG,WAAWU,EAASG,iBAAiBvF,OAAOa,IAE9C0B,EACJgC,EAAIuC,aAAaC,MAAK,SAACC,GAAD,OAAOA,EAAEC,WAAahB,KAAQiB,QACpD,IACAT,EACA,OAEIU,EAAUvD,EAAKkB,KAAKW,EAAQlD,GAClC2D,EAAUjF,KACR6C,EAAIsD,eAAeV,EAAW7F,EAAKgG,EAAQM,EAASzB,EAAQC,IAG9DK,IAEFC,IAxDJ,uRA0DQoB,QAAQC,IAAIpB,IA1DpB,4EA4EA,SAAeqB,EAASrD,EAASrD,EAAK4E,EAAQC,EAAQC,EAAMC,GAA5D,4DAAA/F,OAAA,wDACQsE,EAAWP,EAAKQ,MAAMF,GAD9B,kCAGoBD,EAASC,IAH7B,UAGQK,EAHR,YAIiBsB,IAAXJ,IAAsBA,EAAS7B,EAAKkB,KAAKX,EAASY,IAAKR,EAAIS,OAC1D3F,EAAG4F,WAAWQ,GALrB,0DAMUzB,EAAMyB,EAAQ,CAAEK,WAAW,KANrC,mCAOaF,EAPb,wBAQIxE,QAAQC,IAAR,kBAAuB8C,EAAS4B,KAAhC,QARJ,8BAeMC,EAAQ,EACRC,EAAS,EAIO,WAAhB1B,EAAI4B,QApBV,iBAqBIC,EAAU7B,EAAI8B,cACdC,EAAQ,YAtBZ,2BAuB6B,WAAhB/B,EAAI4B,QAvBjB,iBAwBIC,EAAU7B,EAAIgC,SACdD,EAAQ,sBAzBZ,8BA2BU,IAAIhC,MAAM,2BA3BpB,QA8BE,IADMkD,EAAS,GA7BjB,6BA8BE,EAAgBpB,EAAhB,+CAAyB,CAEvB,IAFOI,EAAgB,mBAEdC,GACP,IAAM1F,EAAIiF,EACJZ,EAAWb,EAAIY,cAAcpE,GAC7BsE,EAAkC,IAAvBD,EAASE,UAEpBoB,EAAYrB,EACdd,EAAIE,WAAWW,EAASuB,aACxBpC,EAAIG,WAAWU,EAASG,iBAAiBH,EAASwB,aAChDC,EAASxB,EACXd,EAAIE,WAAWzE,OAAOa,IACtB0D,EAAIG,WAAWU,EAASG,iBAAiBvF,OAAOa,IAE9C0B,EACJgC,EAAIuC,aAAaC,MAAK,SAACC,GAAD,OAAOA,EAAEC,WAAahB,KAAQiB,QACpD,IACAT,EACA,OAEIU,EAAUvD,EAAKkB,KAAKW,EAAQlD,GAClCiF,EAAOvG,KAAK,CACVsB,EACA,qCAAA1C,OAAA,0FACQiE,EAAIsD,eACRV,EACA7F,EACAgG,EACAM,EACAzB,EACAC,IAPJ,gFAUFK,KA/BOS,EAAU,EAAGA,EAAUD,EAAIF,GAAQG,IAAW,EAA9CA,GAiCTR,IAjEJ,sQAmESuB,GAnET,4EAFAhG,EAAQgE,SAAWA,EAuEnBhE,EAAQ+F,SAAWA,G,qYC3LnB,IAAM/H,EAAOD,EAAQ,QACfqE,EAAOtE,OAAOC,QAAQ,QACtBkI,EAAUnI,OAAOC,QAAQ,UAAUkI,OACnCpI,EAAKC,OAAOC,QAAQ,MAEpBE,EAAWD,EAAKE,UAAUL,EAAGI,UAC7BiI,EAAYlI,EAAKE,UAAUL,EAAGqI,WAC9BC,EAAanI,EAAKE,UAAUL,EAAGsI,YAG/BC,EAAStI,OAAOsI,OAGtB,SAASC,EAAaC,EAAOhF,EAAMjC,GACjC,GAAa,IAATiC,EAAY,CACd,IAAK,IAAI/B,EAAI,EAAGA,EAAI,IAAMA,IACxB+G,EAAM/G,GAAK,EAEb,OAAO,EACF,GAAa,IAAT+B,EAAY,CA6CrB,IA5CA,IAAMiF,EAAO,CACX,IAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAC1F,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAC1F,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IA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,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAEtFA,EAAgB,CACd,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAEtFA,EAAgB,CACd,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAEtFA,EAAgB,CACd,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAEtFA,EAAgB,CACd,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,cAGxFoC,WAAY,CACVpC,EAAgB,CACd,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAEtFA,EAAgB,CACd,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAEtFA,EAAgB,CACd,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAEtFA,EAAgB,CACd,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAEtFA,EAAgB,CACd,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,aAEtFA,EAAgB,CACd,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,W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","file":"js/chunk-2c1d74fc.e8dd2c17.js","sourcesContent":["const fs = window.require('fs');\n// const path = require('path');\nconst util = require('util');\n\n// const hca = require('./hca');\n\nconst readFile = util.promisify(fs.readFile);\n// const writeFile = util.promisify(fs.writeFile);\n// const mkdir = util.promisify(fs.mkdir);\n\nasync function parseAFS2(buffer) {\n  if (typeof(buffer) === 'string') buffer = await readFile(buffer);\n  if (!buffer || buffer.length < 4) return null;\n  let pos = 0;\n  const config = {};\n  config.buffer = buffer;\n  config.magic = buffer.slice(pos, 4).toString(); pos += 4;\n  if (config.magic !== 'AFS2') return null;\n  config.unknown1 = buffer.readUInt8(pos); pos += 1;\n  config.sizeLen = buffer.readUInt8(pos); pos += 1;\n  config.unknown2 = buffer.readUInt8(pos); pos += 1;\n  config.unknown3 = buffer.readUInt8(pos); pos += 1;\n  config.fileCount = buffer.readUInt32LE(pos); pos += 4;\n  config.align = buffer.readUInt16LE(pos); pos += 2;\n  config.key = buffer.readUInt16LE(pos); pos += 2;\n  config.fileIds = [];\n  for (let i = 0; i < config.fileCount; i++) {\n    const fileId = buffer.readUInt16LE(pos); pos += 2;\n    config.fileIds.push(fileId);\n  }\n  const files = [];\n  let start;\n  if (config.sizeLen === 2) {\n    start = buffer.readUInt16LE(pos); pos += 2;\n  } else if (config.sizeLen === 4) {\n    start = buffer.readUInt32LE(pos); pos += 4;\n  } else console.log('Unknown sizeLen: ' + config.sizeLen);\n  let mod = start % config.align;\n  if (mod != 0) start += config.align - mod;\n  for (let i = 0; i < config.fileCount; i++) {\n    let end;\n    if (config.sizeLen === 2) {\n      end = buffer.readUInt16LE(pos); pos += 2;\n    } else if (config.sizeLen === 4) {\n      end = buffer.readUInt32LE(pos); pos += 4;\n    } else console.log('Unknown sizeLen: ' + config.sizeLen);\n    files.push(buffer.slice(start, end));\n    start = end;\n    mod = start % config.align;\n    if (mod != 0) start += config.align - mod;\n  }\n  files.config = config;\n  return files;\n}\nexports.parseAFS2 = parseAFS2;\n","function findZero(buffer, start) {\n  while (buffer[start] !== 0x0) start++;\n  return start;\n}\n\nfunction parseUtf(buffer, toString = false) {\n  if (!buffer || buffer.length < 4) return null;\n  let pos = 0;\n  const config = {};\n  config.magic = buffer.slice(pos, 4).toString(); pos += 4;\n  if (config.magic !== '@UTF') return null;\n  config.dataSize = buffer.readUInt32BE(pos); pos += 4;\n  buffer = buffer.slice(pos);\n  pos = 0;\n  config.unknown = buffer.readUInt16BE(pos); pos += 2;\n  config.valueOffset = buffer.readUInt16BE(pos); pos += 2;\n  config.stringOffset = buffer.readUInt32BE(pos); pos += 4;\n  config.dataOffset = buffer.readUInt32BE(pos); pos += 4;\n  config.nameOffset = buffer.readUInt32BE(pos); pos += 4;\n  config.elementCount = buffer.readUInt16BE(pos); pos += 2;\n  config.valueSize = buffer.readUInt16BE(pos); pos += 2;\n  config.pageCount = buffer.readUInt32BE(pos); pos += 4;\n  let stringEnd = findZero(buffer, config.stringOffset);\n  config.name = buffer.slice(config.stringOffset, stringEnd).toString();\n  let valuePos = config.valueOffset;\n  const pages = [];\n  config.types = [];\n  let firstPos = pos;\n  for (let i = 0; i < config.pageCount; i++) {\n    let page = {};\n    pos = firstPos;\n    for (let j = 0; j < config.elementCount; j++) {\n      let type = buffer.readUInt8(pos); pos = pos + 1;\n      if (i === 0) config.types[j] = type;\n      let stringOffset = config.stringOffset + buffer.readUInt32BE(pos); pos += 4;\n      stringEnd = findZero(buffer, stringOffset);\n      const key = buffer.slice(stringOffset, stringEnd).toString();\n      const method = type >>> 5;\n      type = type & 0x1F;\n      let value = null;\n      if (method > 0) {\n        let offset = method === 1 ? pos : valuePos;\n        switch (type) {\n          case 0x10: value = buffer.readInt8(offset); offset += 1; break;\n          case 0x11: value = buffer.readUInt8(offset); offset += 1; break;\n          case 0x12: value = buffer.readInt16BE(offset); offset += 2; break;\n          case 0x13: value = buffer.readUInt16BE(offset); offset += 2; break;\n          case 0x14: value = buffer.readInt32BE(offset); offset += 4; break;\n          case 0x15: value = buffer.readUInt32BE(offset); offset += 4; break;\n          case 0x16: value = buffer.readBigInt64BE(offset); offset += 8; break;\n          case 0x17: value = buffer.readBigUInt64BE(offset); offset += 8; break;\n          case 0x18: value = buffer.readFloatBE(offset); offset += 4; break;\n          case 0x19: console.log(\"0x19\"); value = buffer.readDoubleBE(offset); offset += 8; break;\n          case 0x1A:\n            stringOffset = config.stringOffset + buffer.readUInt32BE(offset); offset += 4;\n            stringEnd = findZero(buffer, stringOffset);\n            value = buffer.slice(stringOffset, stringEnd).toString();\n            break;\n          case 0x1B:\n            const bufferStart = config.dataOffset + buffer.readUInt32BE(offset); offset += 4;\n            const bufferLen = buffer.readUInt32BE(offset); offset += 4;\n            value = buffer.slice(bufferStart, bufferStart + bufferLen);\n            let temp = parseUtf(value, toString);\n            if (temp) value = temp; else if (toString) value = buffer.slice(bufferStart, bufferStart + bufferLen).toString('hex');\n            break;\n          default:\n            console.log(`unknown type: ${type}`);\n            break;\n        }\n        if (method === 1) pos = offset; else valuePos = offset;\n      }\n      page[key] = value;\n    }\n    pages.push(page);\n  }\n  pages.config = config;\n  return pages;\n}\nexports.parseUtf = parseUtf;\n\n","/* ----eslint-disable */\nconst path = window.require(\"path\");\nconst util = require(\"util\");\nconst fs = window.require(\"fs\");\n\nconst afs2 = require(\"./afs2\");\nconst hca = require(\"./hca\");\nconst utf = require(\"./utf\");\n\nconst readFile = util.promisify(fs.readFile);\nconst mkdir = util.promisify(fs.mkdir);\n\nasync function parseAcb(acbPath) {\n  const pathInfo = path.parse(acbPath);\n  const buffer = await readFile(acbPath);\n  const utfs = utf.parseUtf(buffer);\n  if (!utfs) throw new Error(`NOT ACB FILE`);\n  if (utfs.length !== 1) throw new Error(`Failed to parse ACB file`);\n  const acb = utfs[0];\n  acb.buffer = buffer;\n  acb.memoryHcas = await afs2.parseAFS2(acb.AwbFile);\n  acb.streamHcas = [];\n  for (let i = 0; i < acb.StreamAwbHash.length; i++) {\n    const StreamAwb = acb.StreamAwbHash[i];\n    const awbPath = path.join(pathInfo.dir, StreamAwb.Name + \".awb\");\n    if (fs.existsSync(awbPath)) {\n      const obj = await afs2.parseAFS2(awbPath);\n      acb.streamHcas.push(obj);\n    }\n  }\n  for (let i = 0; i < acb.WaveformTable.length; i++) {\n    const Waveform = acb.WaveformTable[i];\n    const isMemory = Waveform.Streaming === 0;\n    if (!isMemory) {\n      if (!acb.streamHcas[Waveform.StreamAwbPortNo]) {\n        throw new Error(`MISSING ${acb.StreamAwbHash[i].Name}.awb`);\n      }\n    }\n  }\n  return acb;\n}\n\nasync function acb2wavs(acbPath, key, wavDir, volume, mode, skip) {\n  const pathInfo = path.parse(acbPath);\n  // console.log(`Parsing ${pathInfo.base}...`);\n  const acb = await parseAcb(acbPath);\n  if (wavDir === undefined) wavDir = path.join(pathInfo.dir, acb.Name);\n  if (!fs.existsSync(wavDir)) {\n    await mkdir(wavDir, { recursive: true });\n  } else if (skip) {\n    console.log(`Skipped ${pathInfo.base}...`);\n    return;\n  }\n  // console.log(`Extracting ${pathInfo.base}...`);\n  // let memory = 0,\n  //   stream = 0;\n\n  let index = 0;\n  let name_i = 0;\n  const prom_list = [];\n\n  let c_table, c_key;\n  if (acb.Version === 0x1300000) {\n    c_table = acb.SequenceTable;\n    c_key = \"NumTracks\";\n  } else if (acb.Version === 0x1330000) {\n    c_table = acb.CueTable;\n    c_key = \"NumRelatedWaveforms\";\n  } else {\n    throw new Error(\"Unsupported ACB version\");\n  }\n  for (let cue of c_table) {\n    // acb.CueTable.map(cue => {\n    for (let cue_num = 0; cue_num < cue[c_key]; cue_num++) {\n      const i = index;\n      const Waveform = acb.WaveformTable[i];\n      const isMemory = Waveform.Streaming === 0;\n\n      const hcaBuffer = isMemory\n        ? acb.memoryHcas[Waveform.MemoryAwbId]\n        : acb.streamHcas[Waveform.StreamAwbPortNo][Waveform.StreamAwbId];\n      const awbKey = isMemory\n        ? acb.memoryHcas.config.key\n        : acb.streamHcas[Waveform.StreamAwbPortNo].config.key;\n      // const name = isMemory ? `memory_${++memory}.wav` : `stream_${++stream}.wav`;\n      const name =\n        acb.CueNameTable.find((x) => x.CueIndex === name_i).CueName +\n        \"_\" +\n        cue_num +\n        \".wav\";\n\n      const wavPath = path.join(wavDir, name);\n      prom_list.push(\n        hca.decodeHcaToWav(hcaBuffer, key, awbKey, wavPath, volume, mode)\n      );\n\n      index++;\n    }\n    name_i++;\n  }\n  await Promise.all(prom_list);\n  // for (let i = 0; i < acb.WaveformTable.length; i++) {\n  //   const Waveform = acb.WaveformTable[i];\n  //   const isMemory = Waveform.Streaming === 0;\n  //   const hcaBuffer = isMemory ? acb.memoryHcas[Waveform.MemoryAwbId] : acb.streamHcas[Waveform.StreamAwbPortNo][Waveform.StreamAwbId];\n  //   const awbKey = isMemory ? acb.memoryHcas.config.key : acb.streamHcas[Waveform.StreamAwbPortNo].config.key;\n  //   // const name = isMemory ? `memory_${++memory}.wav` : `stream_${++stream}.wav`;\n  //   const _name = acb.CueNameTable.find((x) => x.CueIndex === i)?.CueName;\n  //   const name = (_name) ? _name + '.wav' : `unmapped_${i}.wav`;\n  //   if (!_name) console.log(Waveform);\n\n  //   const wavPath = path.join(wavDir, name);\n  //   await hca.decodeHcaToWav(hcaBuffer, key, awbKey, wavPath, volume, mode);\n  // }\n  // console.log(acb.WaveformTable)\n}\nexports.acb2wavs = acb2wavs;\n\nasync function acbParse(acbPath, key, wavDir, volume, mode, skip) {\n  const pathInfo = path.parse(acbPath);\n  // console.log(`Parsing ${pathInfo.base}...`);\n  const acb = await parseAcb(acbPath);\n  if (wavDir === undefined) wavDir = path.join(pathInfo.dir, acb.Name);\n  if (!fs.existsSync(wavDir)) {\n    await mkdir(wavDir, { recursive: true });\n  } else if (skip) {\n    console.log(`Skipped ${pathInfo.base}...`);\n    return;\n  }\n  // console.log(`Extracting ${pathInfo.base}...`);\n  // let memory = 0,\n  //   stream = 0;\n\n  let index = 0;\n  let name_i = 0;\n  // const prom_list = [];\n\n  let c_table, c_key;\n  if (acb.Version === 0x1300000) {\n    c_table = acb.SequenceTable;\n    c_key = \"NumTracks\";\n  } else if (acb.Version === 0x1330000) {\n    c_table = acb.CueTable;\n    c_key = \"NumRelatedWaveforms\";\n  } else {\n    throw new Error(\"Unsupported ACB version\");\n  }\n  const output = [];\n  for (let cue of c_table) {\n    // acb.CueTable.map(cue => {\n    for (let cue_num = 0; cue_num < cue[c_key]; cue_num++) {\n      const i = index;\n      const Waveform = acb.WaveformTable[i];\n      const isMemory = Waveform.Streaming === 0;\n\n      const hcaBuffer = isMemory\n        ? acb.memoryHcas[Waveform.MemoryAwbId]\n        : acb.streamHcas[Waveform.StreamAwbPortNo][Waveform.StreamAwbId];\n      const awbKey = isMemory\n        ? acb.memoryHcas.config.key\n        : acb.streamHcas[Waveform.StreamAwbPortNo].config.key;\n      // const name = isMemory ? `memory_${++memory}.wav` : `stream_${++stream}.wav`;\n      const name =\n        acb.CueNameTable.find((x) => x.CueIndex === name_i).CueName +\n        \"_\" +\n        cue_num +\n        \".wav\";\n\n      const wavPath = path.join(wavDir, name);\n      output.push([\n        name,\n        async () =>\n          await hca.decodeHcaToWav(\n            hcaBuffer,\n            key,\n            awbKey,\n            wavPath,\n            volume,\n            mode\n          ),\n      ]);\n      index++;\n    }\n    name_i++;\n  }\n  return output;\n}\nexports.acbParse = acbParse;\n","const util = require('util');\nconst path = window.require(\"path\");\nconst Buffer =  window.require(\"buffer\").Buffer;\nconst fs = window.require(\"fs\")\n\nconst readFile = util.promisify(fs.readFile);\nconst writeFile = util.promisify(fs.writeFile);\nconst appendFile = util.promisify(fs.appendFile);\n\n// for eslint\nconst BigInt = window.BigInt;\n\n// DECRYPT START\nfunction initAthTable(table, type, key) {\n  if (type === 0) {\n    for (let i = 0; i < 0x80; i++) {\n      table[i] = 0;\n    }\n    return true;\n  } else if (type === 1) {\n    const list = [\n      0x78, 0x5F, 0x56, 0x51, 0x4E, 0x4C, 0x4B, 0x49, 0x48, 0x48, 0x47, 0x46, 0x46, 0x45, 0x45, 0x45,\n      0x44, 0x44, 0x44, 0x44, 0x43, 0x43, 0x43, 0x43, 0x43, 0x43, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42,\n      0x42, 0x42, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x40, 0x40, 0x40, 0x40,\n      0x40, 0x40, 0x40, 0x40, 0x40, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,\n      0x3F, 0x3F, 0x3F, 0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D,\n      0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B,\n      0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B,\n      0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3B, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C, 0x3C,\n      0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3D, 0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x3E, 0x3F,\n      0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F, 0x3F,\n      0x3F, 0x3F, 0x3F, 0x3F, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40,\n      0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41,\n      0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41,\n      0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x41, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42,\n      0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x43, 0x43, 0x43,\n      0x43, 0x43, 0x43, 0x43, 0x43, 0x43, 0x43, 0x43, 0x43, 0x43, 0x43, 0x43, 0x43, 0x43, 0x44, 0x44,\n      0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x44, 0x45, 0x45, 0x45, 0x45,\n      0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x45, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46, 0x46,\n      0x46, 0x46, 0x47, 0x47, 0x47, 0x47, 0x47, 0x47, 0x47, 0x47, 0x47, 0x47, 0x48, 0x48, 0x48, 0x48,\n      0x48, 0x48, 0x48, 0x48, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x49, 0x4A, 0x4A, 0x4A, 0x4A,\n      0x4A, 0x4A, 0x4A, 0x4A, 0x4B, 0x4B, 0x4B, 0x4B, 0x4B, 0x4B, 0x4B, 0x4C, 0x4C, 0x4C, 0x4C, 0x4C,\n      0x4C, 0x4D, 0x4D, 0x4D, 0x4D, 0x4D, 0x4D, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4E, 0x4F, 0x4F, 0x4F,\n      0x4F, 0x4F, 0x4F, 0x50, 0x50, 0x50, 0x50, 0x50, 0x51, 0x51, 0x51, 0x51, 0x51, 0x52, 0x52, 0x52,\n      0x52, 0x52, 0x53, 0x53, 0x53, 0x53, 0x54, 0x54, 0x54, 0x54, 0x54, 0x55, 0x55, 0x55, 0x55, 0x56,\n      0x56, 0x56, 0x56, 0x57, 0x57, 0x57, 0x57, 0x57, 0x58, 0x58, 0x58, 0x59, 0x59, 0x59, 0x59, 0x5A,\n      0x5A, 0x5A, 0x5A, 0x5B, 0x5B, 0x5B, 0x5B, 0x5C, 0x5C, 0x5C, 0x5D, 0x5D, 0x5D, 0x5D, 0x5E, 0x5E,\n      0x5E, 0x5F, 0x5F, 0x5F, 0x60, 0x60, 0x60, 0x61, 0x61, 0x61, 0x61, 0x62, 0x62, 0x62, 0x63, 0x63,\n      0x63, 0x64, 0x64, 0x64, 0x65, 0x65, 0x66, 0x66, 0x66, 0x67, 0x67, 0x67, 0x68, 0x68, 0x68, 0x69,\n      0x69, 0x6A, 0x6A, 0x6A, 0x6B, 0x6B, 0x6B, 0x6C, 0x6C, 0x6D, 0x6D, 0x6D, 0x6E, 0x6E, 0x6F, 0x6F,\n      0x70, 0x70, 0x70, 0x71, 0x71, 0x72, 0x72, 0x73, 0x73, 0x73, 0x74, 0x74, 0x75, 0x75, 0x76, 0x76,\n      0x77, 0x77, 0x78, 0x78, 0x78, 0x79, 0x79, 0x7A, 0x7A, 0x7B, 0x7B, 0x7C, 0x7C, 0x7D, 0x7D, 0x7E,\n      0x7E, 0x7F, 0x7F, 0x80, 0x80, 0x81, 0x81, 0x82, 0x83, 0x83, 0x84, 0x84, 0x85, 0x85, 0x86, 0x86,\n      0x87, 0x88, 0x88, 0x89, 0x89, 0x8A, 0x8A, 0x8B, 0x8C, 0x8C, 0x8D, 0x8D, 0x8E, 0x8F, 0x8F, 0x90,\n      0x90, 0x91, 0x92, 0x92, 0x93, 0x94, 0x94, 0x95, 0x95, 0x96, 0x97, 0x97, 0x98, 0x99, 0x99, 0x9A,\n      0x9B, 0x9B, 0x9C, 0x9D, 0x9D, 0x9E, 0x9F, 0xA0, 0xA0, 0xA1, 0xA2, 0xA2, 0xA3, 0xA4, 0xA5, 0xA5,\n      0xA6, 0xA7, 0xA7, 0xA8, 0xA9, 0xAA, 0xAA, 0xAB, 0xAC, 0xAD, 0xAE, 0xAE, 0xAF, 0xB0, 0xB1, 0xB1,\n      0xB2, 0xB3, 0xB4, 0xB5, 0xB6, 0xB6, 0xB7, 0xB8, 0xB9, 0xBA, 0xBA, 0xBB, 0xBC, 0xBD, 0xBE, 0xBF,\n      0xC0, 0xC1, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD,\n      0xCE, 0xCF, 0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD7, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD,\n      0xDE, 0xDF, 0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xED, 0xEE,\n      0xEF, 0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF7, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFF, 0xFF\n    ];\n    let v = 0;\n    for (let i = 0; i < 0x80; i++) {\n      const index = v >>> 13;\n      if (index >= 0x28E) {\n        const last = 0x80 - i;\n        for (let j = 0; j < last; j++) {\n          table[i + j] = 0xFF;\n        }\n        break;\n      }\n      table[i] = list[index];\n      v += key;\n    }\n    return true;\n  }\n  return false;\n}\n\nfunction createTable56(r, key) {\n  const mul = ((key & 1) << 3) | 5;\n  const add = (key & 0xE) | 1;\n  key >>>= 4;\n  for (let i = 0; i < 0x10; i++) {\n    key = (key * mul + add) & 0xF;\n    r[i] = key;\n  }\n}\n\nfunction initCiphTable(table, type, key1, key2) {\n  if (type === 0) {\n    for (let i = 0; i < 0x100; i++) table[i] = i;\n    return true;\n  } else if (type === 1) {\n    let v = 0;\n    for (let i = 1; i < 0xFF; i++) {\n      v = (v * 13 + 11) & 0xFF;\n      if (v === 0 || v === 0xFF) v = (v * 13 + 11) & 0xFF;\n      table[i] = v;\n    }\n    table[0] = 0;\n    table[0xFF] = 0xFF;\n    return true;\n  } else if (type === 56) {\n    const t1 = Buffer.alloc(8);\n    if (!key1) key2--;\n    key1--;\n    for (let i = 0; i < 7; i++) {\n      t1[i] = key1 & 0xFF;\n      key1 = (key1 >>> 8) | ((key2 << 24) & 0xFFFFFFFF);\n      key2 >>>= 8;\n    }\n    const t2 = Buffer.from([\n      t1[1], t1[1] ^ t1[6],\n      t1[2] ^ t1[3], t1[2],\n      t1[2] ^ t1[1], t1[3] ^ t1[4],\n      t1[3], t1[3] ^ t1[2],\n      t1[4] ^ t1[5], t1[4],\n      t1[4] ^ t1[3], t1[5] ^ t1[6],\n      t1[5], t1[5] ^ t1[4],\n      t1[6] ^ t1[1], t1[6]\n    ]);\n    const t3 = Buffer.alloc(0x100);\n    const t31 = Buffer.alloc(0x10);\n    const t32 = Buffer.alloc(0x10);\n    createTable56(t31, t1[0]);\n    let k = 0;\n    for (let i = 0; i < 0x10; i++) {\n      createTable56(t32, t2[i]);\n      const v = (t31[i] << 4) & 0xFF;\n      for (let j = 0; j < 0x10; j++) {\n        t3[k++] = v | t32[j];\n      }\n    }\n    let j = 1;\n    for (let i = 0, v = 0; i < 0x100; i++) {\n      v = (v + 0x11) & 0xFF;\n      const a = t3[v];\n      if (a != 0 && a != 0xFF) table[j++] = a;\n    }\n    table[0] = 0;\n    table[0xFF] = 0xFF;\n    return true;\n  }\n  return false;\n}\n\nfunction decryptBlock(table, block) {\n  for (let i = 0; i < block.length; i++) {\n    block[i] = table[block[i]];\n  }\n}\n\nfunction checkSum(data, size) {\n  let sum = 0;\n  const v = [\n    0x0000, 0x8005, 0x800F, 0x000A, 0x801B, 0x001E, 0x0014, 0x8011, 0x8033, 0x0036, 0x003C, 0x8039, 0x0028, 0x802D, 0x8027, 0x0022,\n    0x8063, 0x0066, 0x006C, 0x8069, 0x0078, 0x807D, 0x8077, 0x0072, 0x0050, 0x8055, 0x805F, 0x005A, 0x804B, 0x004E, 0x0044, 0x8041,\n    0x80C3, 0x00C6, 0x00CC, 0x80C9, 0x00D8, 0x80DD, 0x80D7, 0x00D2, 0x00F0, 0x80F5, 0x80FF, 0x00FA, 0x80EB, 0x00EE, 0x00E4, 0x80E1,\n    0x00A0, 0x80A5, 0x80AF, 0x00AA, 0x80BB, 0x00BE, 0x00B4, 0x80B1, 0x8093, 0x0096, 0x009C, 0x8099, 0x0088, 0x808D, 0x8087, 0x0082,\n    0x8183, 0x0186, 0x018C, 0x8189, 0x0198, 0x819D, 0x8197, 0x0192, 0x01B0, 0x81B5, 0x81BF, 0x01BA, 0x81AB, 0x01AE, 0x01A4, 0x81A1,\n    0x01E0, 0x81E5, 0x81EF, 0x01EA, 0x81FB, 0x01FE, 0x01F4, 0x81F1, 0x81D3, 0x01D6, 0x01DC, 0x81D9, 0x01C8, 0x81CD, 0x81C7, 0x01C2,\n    0x0140, 0x8145, 0x814F, 0x014A, 0x815B, 0x015E, 0x0154, 0x8151, 0x8173, 0x0176, 0x017C, 0x8179, 0x0168, 0x816D, 0x8167, 0x0162,\n    0x8123, 0x0126, 0x012C, 0x8129, 0x0138, 0x813D, 0x8137, 0x0132, 0x0110, 0x8115, 0x811F, 0x011A, 0x810B, 0x010E, 0x0104, 0x8101,\n    0x8303, 0x0306, 0x030C, 0x8309, 0x0318, 0x831D, 0x8317, 0x0312, 0x0330, 0x8335, 0x833F, 0x033A, 0x832B, 0x032E, 0x0324, 0x8321,\n    0x0360, 0x8365, 0x836F, 0x036A, 0x837B, 0x037E, 0x0374, 0x8371, 0x8353, 0x0356, 0x035C, 0x8359, 0x0348, 0x834D, 0x8347, 0x0342,\n    0x03C0, 0x83C5, 0x83CF, 0x03CA, 0x83DB, 0x03DE, 0x03D4, 0x83D1, 0x83F3, 0x03F6, 0x03FC, 0x83F9, 0x03E8, 0x83ED, 0x83E7, 0x03E2,\n    0x83A3, 0x03A6, 0x03AC, 0x83A9, 0x03B8, 0x83BD, 0x83B7, 0x03B2, 0x0390, 0x8395, 0x839F, 0x039A, 0x838B, 0x038E, 0x0384, 0x8381,\n    0x0280, 0x8285, 0x828F, 0x028A, 0x829B, 0x029E, 0x0294, 0x8291, 0x82B3, 0x02B6, 0x02BC, 0x82B9, 0x02A8, 0x82AD, 0x82A7, 0x02A2,\n    0x82E3, 0x02E6, 0x02EC, 0x82E9, 0x02F8, 0x82FD, 0x82F7, 0x02F2, 0x02D0, 0x82D5, 0x82DF, 0x02DA, 0x82CB, 0x02CE, 0x02C4, 0x82C1,\n    0x8243, 0x0246, 0x024C, 0x8249, 0x0258, 0x825D, 0x8257, 0x0252, 0x0270, 0x8275, 0x827F, 0x027A, 0x826B, 0x026E, 0x0264, 0x8261,\n    0x0220, 0x8225, 0x822F, 0x022A, 0x823B, 0x023E, 0x0234, 0x8231, 0x8213, 0x0216, 0x021C, 0x8219, 0x0208, 0x820D, 0x8207, 0x0202,\n  ];\n  for (let i = 0; i < size; i++) {\n    sum = ((sum << 8) & 0xFFFF) ^ v[(sum >>> 8) ^ data[i]];\n  }\n  return sum;\n}\n\nfunction parseHCA(buffer, key, awbKey) {\n  if (awbKey === undefined) awbKey = 0;\n  if (!buffer || buffer.length < 4) return null;\n  let pos = 0;\n  const hca = {};\n  // HCA\n  hca.magic = buffer.readUInt32LE(pos); pos += 4;\n  if ((hca.magic & 0x7F7F7F7F) !== 0x00414348) return null;\n  hca.version = buffer.readUInt16BE(pos); pos += 2;\n  hca.dataOffset = buffer.readUInt16BE(pos); pos += 2;\n  // fmt\n  hca.fmt = buffer.readUInt32LE(pos); pos += 4;\n  if ((hca.fmt & 0x7F7F7F7F) !== 0x00746D66) return null;\n  hca.channelCount = buffer.readUInt8(pos);\n  hca.samplingRate = 0xFFFFFF & buffer.readUInt32BE(pos); pos += 4;\n  hca.blockCount = buffer.readUInt32BE(pos); pos += 4;\n  hca.muteHeader = buffer.readUInt16BE(pos); pos += 2;\n  hca.muteFooter = buffer.readUInt16BE(pos); pos += 2;\n  if (!(hca.channelCount >= 1 && hca.channelCount <= 16)) return null;\n  if (!(hca.samplingRate >= 1 && hca.samplingRate <= 0x7FFFFF)) return null;\n  let label = buffer.readUInt32LE(pos); pos += 4;\n  hca.compdec = label;\n  hca.blockSize = buffer.readUInt16BE(pos); pos += 2;\n  hca.r01 = buffer.readUInt8(pos); pos += 1;\n  hca.r02 = buffer.readUInt8(pos); pos += 1;\n  if ((label & 0x7F7F7F7F) === 0x706D6F63) { // comp\n    hca.r03 = buffer.readUInt8(pos); pos += 1;\n    hca.r04 = buffer.readUInt8(pos); pos += 1;\n    hca.r05 = buffer.readUInt8(pos); pos += 1;\n    hca.r06 = buffer.readUInt8(pos); pos += 1;\n    hca.r07 = buffer.readUInt8(pos); pos += 1;\n    hca.r08 = buffer.readUInt8(pos); pos += 1;\n    hca.reserve1 = buffer.readUInt8(pos); pos += 1;\n    hca.reserve2 = buffer.readUInt8(pos); pos += 1;\n  } else if ((label & 0x7F7F7F7F) === 0x00636564) { // dec\n    hca.count1 = buffer.readUInt8(pos); pos += 1;\n    hca.count2 = buffer.readUInt8(pos); pos += 1;\n    hca.r03 = (buffer.readUInt8(pos) >>> 4) & 0xF;\n    hca.r04 = buffer.readUInt8(pos) & 0xF; pos += 1;\n    hca.enableCount2 = buffer.readUInt8(pos); pos += 1;\n  } else return null;\n  if (!((hca.blockSize >= 1 && hca.blockSize <= 0xFFFF) || (hca.blockSize === 0))) return null;\n  if (!(hca.r01 >= 0 && hca.r01 <= hca.r02 && hca.r02 <= 0x1F)) return null;\n  label = buffer.readUInt32LE(pos); pos += 4;\n  if ((label & 0x7F7F7F7F) === 0x00726276) { // vbr\n    hca.vbr = label;\n    hca.vbrPos = pos - 4;\n    hca.vbrR1 = buffer.readUInt16BE(pos); pos += 2;\n    hca.vbrR2 = buffer.readUInt16BE(pos); pos += 2;\n    if (!(hca.blockSize === 0 && hca.vbrR1 >= 0 && hca.vbrR2 <= 0x1FF)) return null;\n    label = buffer.readUInt32LE(pos); pos += 4;\n  }\n  if ((label & 0x7F7F7F7F) === 0x00687461) { // ath\n    hca.ath = label;\n    hca.athPos = pos - 4;\n    hca.athType = buffer.readUInt16BE(pos); pos += 2;\n    label = buffer.readUInt32LE(pos); pos += 4;\n  } else {\n    hca.athType = hca.version < 0x200 ? 1 : 0;\n  }\n  if ((label & 0x7F7F7F7F) === 0x706F6F6C) { // loop\n    hca.loop = label;\n    hca.loopPos = pos - 4;\n    hca.loopStart = buffer.readUInt32BE(pos); pos += 4;\n    hca.loopEnd = buffer.readUInt32BE(pos); pos += 4;\n    hca.loopCount = buffer.readUInt16BE(pos); pos += 2;\n    if (!(hca.loopStart >= 0 && hca.loopStart <= hca.loopEnd && hca.loopEnd <= hca.blockCount)) return null;\n    hca.loopR1 = buffer.readUInt16BE(pos); pos += 2;\n    label = buffer.readUInt32LE(pos); pos += 4;\n  }\n  if ((label & 0x7F7F7F7F) === 0x68706963) { // ciph\n    hca.ciph = label;\n    hca.ciphPos = pos - 4;\n    hca.ciphType = buffer.readUInt16BE(pos); pos += 2;\n    if (!(hca.ciphType === 0 || hca.ciphType === 1 || hca.ciphType === 56)) return null;\n    label = buffer.readUInt32LE(pos); pos += 4;\n  }\n  if ((label & 0x7F7F7F7F) === 0x00617672) { // rva\n    hca.rva = label;\n    hca.rvaPos = pos - 4;\n    hca.volume = buffer.readFloatBE(pos); pos += 4;\n    label = buffer.readUInt32LE(pos); pos += 4;\n  } else {\n    hca.volume = 1;\n  }\n  if ((label & 0x7F7F7F7F) === 0x6D6D6F63) { // comm\n    hca.comm = label;\n    hca.commPos = pos - 4;\n    hca.commLen = buffer.readUInt8(pos); pos += 1;\n    if (hca.commLen) {\n      hca.comment = buffer.slice(pos, pos + hca.commLen).toString(); pos += hca.commLen;\n    }\n    label = buffer.readUInt32LE(pos); pos += 4;\n  }\n  if ((label & 0x7F7F7F7F) === 0x00646170) { // pad\n    hca.pad = label;\n    hca.padPos = pos - 4;\n    label = buffer.readUInt32LE(pos); pos += 4;\n  }\n  hca.athTable = Buffer.alloc(0x80);\n  if (!initAthTable(hca.athTable, hca.athType, hca.samplingRate)) return null;\n  let key1 = 0, key2 = 0;\n  if (key) {\n    key = BigInt(key);\n    if (awbKey) {\n      key = (BigInt(key) * ((BigInt(awbKey) << BigInt(\"16\")) | BigInt(((~awbKey & 0xFFFF) + 2) & 0xFFFF))) & BigInt(\"0xFFFFFFFFFFFFFFFF\");\n    }\n    key1 = Number(key & BigInt(\"0xFFFFFFFF\"));\n    key2 = Number((key >> BigInt(\"32\")) & BigInt(\"0xFFFFFFFF\"));\n  }\n  hca.ciphTable = Buffer.alloc(0x100);\n  if (!initCiphTable(hca.ciphTable, hca.ciphType, key1, key2)) return null;\n  return hca;\n}\n\nasync function decryptHca(buffer, key, awbKey, type, hcaPath) {\n  if (typeof (buffer) === 'string') {\n    console.log(`Decrypting ${path.parse(buffer).base}...`);\n    buffer = await readFile(buffer);\n  }\n  if (typeof (type) === 'string') {\n    hcaPath = type;\n    type = 1;\n  } else if (type === undefined) type = 1;\n  const hca = parseHCA(buffer, key, awbKey);\n  if (!hca) throw new Error(`Not a valid HCA file`);\n  buffer.writeUInt32LE(hca.magic & 0x7F7F7F7F, 0x0);\n  buffer.writeUInt32LE(hca.fmt & 0x7F7F7F7F, 0x8);\n  buffer.writeUInt32LE(hca.compdec & 0x7F7F7F7F, 0x18);\n  if (hca.vbr) buffer.writeUInt32LE(hca.vbr & 0x7F7F7F7F, hca.vbrPos);\n  if (hca.ath) buffer.writeUInt32LE(hca.ath & 0x7F7F7F7F, hca.athPos);\n  if (hca.loop) buffer.writeUInt32LE(hca.loop & 0x7F7F7F7F, hca.loopPos);\n  if (hca.ciph) buffer.writeUInt32LE(hca.ciph & 0x7F7F7F7F, hca.ciphPos);\n  if (hca.rva) buffer.writeUInt32LE(hca.rva & 0x7F7F7F7F, hca.rvaPos);\n  if (hca.comm) buffer.writeUInt32LE(hca.comm & 0x7F7F7F7F, hca.commPos);\n  if (hca.pad) buffer.writeUInt32LE(hca.pad & 0x7F7F7F7F, hca.padPos);\n  buffer.writeUInt16BE(type, hca.ciphPos + 4);\n  buffer.writeUInt16BE(checkSum(buffer, hca.dataOffset - 2), hca.dataOffset - 2);\n  if (hca.ciphType !== type) {\n    const ciphTable = Buffer.alloc(0x100);\n    const revTable = Buffer.alloc(0x100);\n    initCiphTable(ciphTable, 1);\n    for (let i = 0; i < revTable.length; i++) revTable[ciphTable[i]] = i;\n    let offset = hca.dataOffset;\n    for (let i = 0; i < hca.blockCount; i++) {\n      if (offset >= buffer.length) break;\n      const block = buffer.slice(offset, offset + hca.blockSize);\n      decryptBlock(hca.ciphTable, block);\n      if (type === 1) decryptBlock(revTable, block);\n      block.writeUInt16BE(checkSum(block, block.length - 2), block.length - 2);\n      offset += hca.blockSize;\n    }\n  }\n  if (hcaPath !== undefined) await writeFile(hcaPath, buffer);\n}\nexports.decryptHca = decryptHca;\n\n// DECODE START\nfunction ceil2(a, b) {\n  return (b > 0) ? (Math.floor(a / b) + ((a % b) ? 1 : 0)) : 0;\n}\n\nfunction initDecode(hca) {\n  const isComp = (hca.compdec & 0x7F7F7F7F) === 0x706D6F63;\n  hca.comp = {};\n  hca.comp.r01 = hca.r01;\n  hca.comp.r02 = hca.r02;\n  hca.comp.r03 = hca.r03;\n  hca.comp.r04 = hca.r04;\n  hca.comp.r05 = isComp ? hca.r05 : hca.count1 + 1;\n  hca.comp.r06 = isComp ? hca.r06 : hca.enableCount2 ? hca.count2 + 1 : hca.count1 + 1;\n  // r05-r06 ->   hca.r05 - hca.r06\n  hca.comp.r07 = isComp ? hca.r07 : hca.r05 - hca.r06;\n  hca.comp.r08 = isComp ? hca.r08 : 0;\n  if (!hca.comp.r03) hca.comp.r03 = 1;\n  if (!(hca.comp.r01 === 1 && hca.comp.r02 === 15)) {\n    return false;\n  }\n  hca.comp.r09 = ceil2(hca.comp.r05 - (hca.comp.r06 + hca.comp.r07), hca.comp.r08);\n  const r = Buffer.alloc(0x10);\n  const b = Math.floor(hca.channelCount / hca.comp.r03);\n  if (hca.comp.r07 && b > 1) {\n    let c = 0;\n    for (let i = 0; i < hca.comp.r03; i++) {\n      switch (b) {\n        case 2: r[c] = 1; r[c + 1] = 2; break;\n        case 3: r[c] = 1; r[c + 1] = 2; break;\n        case 4: r[c] = 1; r[c + 1] = 2; if (hca.comp.r04 == 0) { r[c + 2] = 1; r[c + 3] = 2; } break;\n        case 5: r[c] = 1; r[c + 1] = 2; if (hca.comp.r04 <= 2) { r[c + 3] = 1; r[c + 4] = 2; } break;\n        case 6: r[c] = 1; r[c + 1] = 2; r[c + 4] = 1; r[c + 5] = 2; break;\n        case 7: r[c] = 1; r[c + 1] = 2; r[c + 4] = 1; r[c + 5] = 2; break;\n        case 8: r[c] = 1; r[c + 1] = 2; r[c + 4] = 1; r[c + 5] = 2; r[c + 6] = 1; r[c + 7] = 2; break;\n      }\n      c += b;\n    }\n  }\n  hca.channels = [];\n  for (let i = 0; i < hca.channelCount; i++) {\n    const channel = {};\n    channel.block = new Float32Array(0x80);\n    channel.base = new Float32Array(0x80);\n    channel.value = Buffer.alloc(0x80);\n    channel.scale = Buffer.alloc(0x80);\n    channel.value2 = Buffer.alloc(8);\n    channel.type = r[i];\n    channel.value3 = channel.value.slice(hca.comp.r06 + hca.comp.r07);\n    channel.count = hca.comp.r06 + ((r[i] != 2) ? hca.comp.r07 : 0);\n    channel.wav1 = new Float32Array(0x80);\n    channel.wav2 = new Float32Array(0x80);\n    channel.wav3 = new Float32Array(0x80);\n    channel.wave = [\n      new Float32Array(0x80), new Float32Array(0x80),\n      new Float32Array(0x80), new Float32Array(0x80),\n      new Float32Array(0x80), new Float32Array(0x80),\n      new Float32Array(0x80), new Float32Array(0x80)\n    ];\n    hca.channels.push(channel);\n  }\n  return true;\n}\n\nclass BlockReader {\n\n  constructor(buffer) {\n    this.data = buffer;\n    this.size = buffer.length * 8 - 16;\n    this.bit = 0;\n    this.mask = [0xFFFFFF, 0x7FFFFF, 0x3FFFFF, 0x1FFFFF, 0x0FFFFF, 0x07FFFF, 0x03FFFF, 0x01FFFF];\n  }\n\n  checkBit(bitSize) {\n    let v = 0;\n    if (this.bit + bitSize <= this.size) {\n      const pos = this.bit >>> 3;\n      v = this.data[pos];\n      v = (v << 8) | this.data[pos + 1];\n      v = (v << 8) | this.data[pos + 2];\n      v &= this.mask[this.bit & 7];\n      v >>>= 24 - (this.bit & 7) - bitSize;\n    }\n    return v;\n  }\n\n  getBit(bitSize) {\n    const v = this.checkBit(bitSize);\n    this.bit += bitSize;\n    return v;\n  }\n\n  addBit(bitSize) {\n    this.bit += bitSize;\n  }\n\n}\n\nfunction arrayIntToFloat(arrayInt) {\n  let arrayFloat = [];\n  const buffer = Buffer.alloc(4);\n  for (let i = 0; i < arrayInt.length; i++) {\n    buffer.writeUInt32LE(arrayInt[i], 0);\n    arrayFloat[i] = buffer.readFloatLE(0);\n  }\n  return arrayFloat;\n}\n\nconst DECODE1 = {\n  scalelist: [\n    0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0E, 0x0D, 0x0D,\n    0x0D, 0x0D, 0x0D, 0x0D, 0x0C, 0x0C, 0x0C, 0x0C,\n    0x0C, 0x0C, 0x0B, 0x0B, 0x0B, 0x0B, 0x0B, 0x0B,\n    0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x0A, 0x09,\n    0x09, 0x09, 0x09, 0x09, 0x09, 0x08, 0x08, 0x08,\n    0x08, 0x08, 0x08, 0x07, 0x06, 0x06, 0x05, 0x04,\n    0x04, 0x04, 0x03, 0x03, 0x03, 0x02, 0x02, 0x02,\n    0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n  ],\n  valueFloat: arrayIntToFloat([\n    0x342A8D26, 0x34633F89, 0x3497657D, 0x34C9B9BE, 0x35066491, 0x353311C4, 0x356E9910, 0x359EF532,\n    0x35D3CCF1, 0x360D1ADF, 0x363C034A, 0x367A83B3, 0x36A6E595, 0x36DE60F5, 0x371426FF, 0x3745672A,\n    0x37838359, 0x37AF3B79, 0x37E97C38, 0x381B8D3A, 0x384F4319, 0x388A14D5, 0x38B7FBF0, 0x38F5257D,\n    0x3923520F, 0x39599D16, 0x3990FA4D, 0x39C12C4D, 0x3A00B1ED, 0x3A2B7A3A, 0x3A647B6D, 0x3A9837F0,\n    0x3ACAD226, 0x3B071F62, 0x3B340AAF, 0x3B6FE4BA, 0x3B9FD228, 0x3BD4F35B, 0x3C0DDF04, 0x3C3D08A4,\n    0x3C7BDFED, 0x3CA7CD94, 0x3CDF9613, 0x3D14F4F0, 0x3D467991, 0x3D843A29, 0x3DB02F0E, 0x3DEAC0C7,\n    0x3E1C6573, 0x3E506334, 0x3E8AD4C6, 0x3EB8FBAF, 0x3EF67A41, 0x3F243516, 0x3F5ACB94, 0x3F91C3D3,\n    0x3FC238D2, 0x400164D2, 0x402C6897, 0x4065B907, 0x40990B88, 0x40CBEC15, 0x4107DB35, 0x413504F3,\n  ]),\n  scaleFloat: arrayIntToFloat([\n    0x00000000, 0x3F2AAAAB, 0x3ECCCCCD, 0x3E924925, 0x3E638E39, 0x3E3A2E8C, 0x3E1D89D9, 0x3E088889,\n    0x3D842108, 0x3D020821, 0x3C810204, 0x3C008081, 0x3B804020, 0x3B002008, 0x3A801002, 0x3A000801,\n  ])\n}\nfunction decode1(channel, reader, a, b, athTable) {\n  let v = reader.getBit(3);\n  if (v >= 6) {\n    for (let i = 0; i < channel.count; i++) channel.value[i] = reader.getBit(6);\n  } else if (v) {\n    let v1 = reader.getBit(6), v2 = (1 << v) - 1, v3 = v2 >>> 1, v4;\n    channel.value[0] = v1;\n    for (let i = 1; i < channel.count; i++) {\n      v4 = reader.getBit(v);\n      if (v4 !== v2) { v1 += v4 - v3; } else { v1 = reader.getBit(6); }\n      channel.value[i] = v1;\n    }\n  } else {\n    channel.value.fill(0);\n  }\n  if (channel.type == 2) {\n    v = reader.checkBit(4); channel.value2[0] = v;\n    if (v < 15) for (let i = 0; i < 8; i++) channel.value2[i] = reader.getBit(4);\n  } else {\n    for (let i = 0; i < a; i++) {\n      channel.value3[i] = reader.getBit(6);\n    }\n  }\n  for (let i = 0; i < channel.count; i++) {\n    v = channel.value[i];\n    if (v) {\n      v = athTable[i] + ((b + i) >>> 8) - Math.floor((v * 5) / 2) + 1;\n      if (v < 0) v = 15; else if (v >= 0x39) v = 1; else v = DECODE1.scalelist[v];\n    }\n    channel.scale[i] = v;\n  }\n  channel.scale.fill(0, channel.count, 0x80);\n  for (let i = 0; i < channel.count; i++) channel.base[i] = DECODE1.valueFloat[channel.value[i]] * DECODE1.scaleFloat[channel.scale[i]];\n}\n\nconst DECODE2 = {\n  list1: [\n    0, 2, 3, 3, 4, 4, 4, 4, 5, 6, 7, 8, 9, 10, 11, 12,\n  ],\n  list2: [\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    1, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    2, 2, 2, 2, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,\n    2, 2, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4,\n    3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4,\n    3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n    3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4,\n  ],\n  list3: [\n    +0, +0, +0, +0, +0, +0, +0, +0, +0, +0, +0, +0, +0, +0, +0, +0,\n    +0, +0, +1, -1, +0, +0, +0, +0, +0, +0, +0, +0, +0, +0, +0, +0,\n    +0, +0, +1, +1, -1, -1, +2, -2, +0, +0, +0, +0, +0, +0, +0, +0,\n    +0, +0, +1, -1, +2, -2, +3, -3, +0, +0, +0, +0, +0, +0, +0, +0,\n    +0, +0, +1, +1, -1, -1, +2, +2, -2, -2, +3, +3, -3, -3, +4, -4,\n    +0, +0, +1, +1, -1, -1, +2, +2, -2, -2, +3, -3, +4, -4, +5, -5,\n    +0, +0, +1, +1, -1, -1, +2, -2, +3, -3, +4, -4, +5, -5, +6, -6,\n    +0, +0, +1, -1, +2, -2, +3, -3, +4, -4, +5, -5, +6, -6, +7, -7,\n  ]\n};\nfunction decode2(channel, reader) {\n  for (let i = 0; i < channel.count; i++) {\n    let f;\n    const s = channel.scale[i];\n    const bitSize = DECODE2.list1[s];\n    let v = reader.getBit(bitSize);\n    if (s < 8) {\n      v += s << 4;\n      reader.addBit(DECODE2.list2[v] - bitSize);\n      f = DECODE2.list3[v];\n    } else {\n      v = (1 - ((v & 1) << 1)) * Math.floor(v / 2);\n      if (!v) reader.addBit(-1);\n      f = v;\n    }\n    channel.block[i] = channel.base[i] * f;\n  }\n  channel.block.fill(0, channel.count, 0x80);\n}\n\nconst DECODE3 = {\n  listFloat: arrayIntToFloat([\n    0x00000000, 0x00000000, 0x32A0B051, 0x32D61B5E, 0x330EA43A, 0x333E0F68, 0x337D3E0C, 0x33A8B6D5,\n    0x33E0CCDF, 0x3415C3FF, 0x34478D75, 0x3484F1F6, 0x34B123F6, 0x34EC0719, 0x351D3EDA, 0x355184DF,\n    0x358B95C2, 0x35B9FCD2, 0x35F7D0DF, 0x36251958, 0x365BFBB8, 0x36928E72, 0x36C346CD, 0x370218AF,\n    0x372D583F, 0x3766F85B, 0x3799E046, 0x37CD078C, 0x3808980F, 0x38360094, 0x38728177, 0x38A18FAF,\n    0x38D744FD, 0x390F6A81, 0x393F179A, 0x397E9E11, 0x39A9A15B, 0x39E2055B, 0x3A16942D, 0x3A48A2D8,\n    0x3A85AAC3, 0x3AB21A32, 0x3AED4F30, 0x3B1E196E, 0x3B52A81E, 0x3B8C57CA, 0x3BBAFF5B, 0x3BF9295A,\n    0x3C25FED7, 0x3C5D2D82, 0x3C935A2B, 0x3CC4563F, 0x3D02CD87, 0x3D2E4934, 0x3D68396A, 0x3D9AB62B,\n    0x3DCE248C, 0x3E0955EE, 0x3E36FD92, 0x3E73D290, 0x3EA27043, 0x3ED87039, 0x3F1031DC, 0x3F40213B,\n    0x3F800000, 0x3FAA8D26, 0x3FE33F89, 0x4017657D, 0x4049B9BE, 0x40866491, 0x40B311C4, 0x40EE9910,\n    0x411EF532, 0x4153CCF1, 0x418D1ADF, 0x41BC034A, 0x41FA83B3, 0x4226E595, 0x425E60F5, 0x429426FF,\n    0x42C5672A, 0x43038359, 0x432F3B79, 0x43697C38, 0x439B8D3A, 0x43CF4319, 0x440A14D5, 0x4437FBF0,\n    0x4475257D, 0x44A3520F, 0x44D99D16, 0x4510FA4D, 0x45412C4D, 0x4580B1ED, 0x45AB7A3A, 0x45E47B6D,\n    0x461837F0, 0x464AD226, 0x46871F62, 0x46B40AAF, 0x46EFE4BA, 0x471FD228, 0x4754F35B, 0x478DDF04,\n    0x47BD08A4, 0x47FBDFED, 0x4827CD94, 0x485F9613, 0x4894F4F0, 0x48C67991, 0x49043A29, 0x49302F0E,\n    0x496AC0C7, 0x499C6573, 0x49D06334, 0x4A0AD4C6, 0x4A38FBAF, 0x4A767A41, 0x4AA43516, 0x4ADACB94,\n    0x4B11C3D3, 0x4B4238D2, 0x4B8164D2, 0x4BAC6897, 0x4BE5B907, 0x4C190B88, 0x4C4BEC15, 0x00000000,\n  ])\n};\nfunction decode3(channel, a, b, c, d) {\n  if (channel.type !== 2 && b > 0) {\n    for (let i = 0; i < a; i++) {\n      for (let j = 0, k = c, l = c - 1; j < b && k < d; j++ , l--) {\n        channel.block[k++] = DECODE3.listFloat[0x40 + channel.value3[i] - channel.value[l]] * channel.block[l];\n      }\n    }\n    channel.block[0x80 - 1] = 0;\n  }\n}\n\nconst DECODE4 = {\n  listFloat: arrayIntToFloat([\n    0x40000000, 0x3FEDB6DB, 0x3FDB6DB7, 0x3FC92492, 0x3FB6DB6E, 0x3FA49249, 0x3F924925, 0x3F800000,\n    0x3F5B6DB7, 0x3F36DB6E, 0x3F124925, 0x3EDB6DB7, 0x3E924925, 0x3E124925, 0x00000000, 0x00000000,\n  ])\n};\nfunction decode4(channel, nextChannel, index, a, b, c) {\n  if (channel.type == 1 && c) {\n    const f1 = DECODE4.listFloat[nextChannel.value2[index]];\n    const f2 = f1 - 2.0;\n    for (let i = 0; i < a; i++) {\n      nextChannel.block[b + i] = channel.block[b + i] * f2;\n      channel.block[b + i] *= f1;\n    }\n  }\n}\n\nconst DECODE5 = {\n  list1Float: [\n    arrayIntToFloat([\n      0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75,\n      0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75,\n      0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75,\n      0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75,\n      0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75,\n      0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75,\n      0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75,\n      0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75, 0x3DA73D75,\n    ]),\n    arrayIntToFloat([\n      0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31,\n      0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31,\n      0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31,\n      0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31,\n      0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31,\n      0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31,\n      0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31,\n      0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31, 0x3F7B14BE, 0x3F54DB31,\n    ]),\n    arrayIntToFloat([\n      0x3F7EC46D, 0x3F74FA0B, 0x3F61C598, 0x3F45E403, 0x3F7EC46D, 0x3F74FA0B, 0x3F61C598, 0x3F45E403,\n      0x3F7EC46D, 0x3F74FA0B, 0x3F61C598, 0x3F45E403, 0x3F7EC46D, 0x3F74FA0B, 0x3F61C598, 0x3F45E403,\n      0x3F7EC46D, 0x3F74FA0B, 0x3F61C598, 0x3F45E403, 0x3F7EC46D, 0x3F74FA0B, 0x3F61C598, 0x3F45E403,\n      0x3F7EC46D, 0x3F74FA0B, 0x3F61C598, 0x3F45E403, 0x3F7EC46D, 0x3F74FA0B, 0x3F61C598, 0x3F45E403,\n      0x3F7EC46D, 0x3F74FA0B, 0x3F61C598, 0x3F45E403, 0x3F7EC46D, 0x3F74FA0B, 0x3F61C598, 0x3F45E403,\n      0x3F7EC46D, 0x3F74FA0B, 0x3F61C598, 0x3F45E403, 0x3F7EC46D, 0x3F74FA0B, 0x3F61C598, 0x3F45E403,\n      0x3F7EC46D, 0x3F74FA0B, 0x3F61C598, 0x3F45E403, 0x3F7EC46D, 0x3F74FA0B, 0x3F61C598, 0x3F45E403,\n      0x3F7EC46D, 0x3F74FA0B, 0x3F61C598, 0x3F45E403, 0x3F7EC46D, 0x3F74FA0B, 0x3F61C598, 0x3F45E403,\n    ]),\n    arrayIntToFloat([\n      0x3F7FB10F, 0x3F7D3AAC, 0x3F7853F8, 0x3F710908, 0x3F676BD8, 0x3F5B941A, 0x3F4D9F02, 0x3F3DAEF9,\n      0x3F7FB10F, 0x3F7D3AAC, 0x3F7853F8, 0x3F710908, 0x3F676BD8, 0x3F5B941A, 0x3F4D9F02, 0x3F3DAEF9,\n      0x3F7FB10F, 0x3F7D3AAC, 0x3F7853F8, 0x3F710908, 0x3F676BD8, 0x3F5B941A, 0x3F4D9F02, 0x3F3DAEF9,\n      0x3F7FB10F, 0x3F7D3AAC, 0x3F7853F8, 0x3F710908, 0x3F676BD8, 0x3F5B941A, 0x3F4D9F02, 0x3F3DAEF9,\n      0x3F7FB10F, 0x3F7D3AAC, 0x3F7853F8, 0x3F710908, 0x3F676BD8, 0x3F5B941A, 0x3F4D9F02, 0x3F3DAEF9,\n      0x3F7FB10F, 0x3F7D3AAC, 0x3F7853F8, 0x3F710908, 0x3F676BD8, 0x3F5B941A, 0x3F4D9F02, 0x3F3DAEF9,\n      0x3F7FB10F, 0x3F7D3AAC, 0x3F7853F8, 0x3F710908, 0x3F676BD8, 0x3F5B941A, 0x3F4D9F02, 0x3F3DAEF9,\n      0x3F7FB10F, 0x3F7D3AAC, 0x3F7853F8, 0x3F710908, 0x3F676BD8, 0x3F5B941A, 0x3F4D9F02, 0x3F3DAEF9,\n    ]),\n    arrayIntToFloat([\n      0x3F7FEC43, 0x3F7F4E6D, 0x3F7E1324, 0x3F7C3B28, 0x3F79C79D, 0x3F76BA07, 0x3F731447, 0x3F6ED89E,\n      0x3F6A09A7, 0x3F64AA59, 0x3F5EBE05, 0x3F584853, 0x3F514D3D, 0x3F49D112, 0x3F41D870, 0x3F396842,\n      0x3F7FEC43, 0x3F7F4E6D, 0x3F7E1324, 0x3F7C3B28, 0x3F79C79D, 0x3F76BA07, 0x3F731447, 0x3F6ED89E,\n      0x3F6A09A7, 0x3F64AA59, 0x3F5EBE05, 0x3F584853, 0x3F514D3D, 0x3F49D112, 0x3F41D870, 0x3F396842,\n      0x3F7FEC43, 0x3F7F4E6D, 0x3F7E1324, 0x3F7C3B28, 0x3F79C79D, 0x3F76BA07, 0x3F731447, 0x3F6ED89E,\n      0x3F6A09A7, 0x3F64AA59, 0x3F5EBE05, 0x3F584853, 0x3F514D3D, 0x3F49D112, 0x3F41D870, 0x3F396842,\n      0x3F7FEC43, 0x3F7F4E6D, 0x3F7E1324, 0x3F7C3B28, 0x3F79C79D, 0x3F76BA07, 0x3F731447, 0x3F6ED89E,\n      0x3F6A09A7, 0x3F64AA59, 0x3F5EBE05, 0x3F584853, 0x3F514D3D, 0x3F49D112, 0x3F41D870, 0x3F396842,\n    ]),\n    arrayIntToFloat([\n      0x3F7FFB11, 0x3F7FD397, 0x3F7F84AB, 0x3F7F0E58, 0x3F7E70B0, 0x3F7DABCC, 0x3F7CBFC9, 0x3F7BACCD,\n      0x3F7A7302, 0x3F791298, 0x3F778BC5, 0x3F75DEC6, 0x3F740BDD, 0x3F721352, 0x3F6FF573, 0x3F6DB293,\n      0x3F6B4B0C, 0x3F68BF3C, 0x3F660F88, 0x3F633C5A, 0x3F604621, 0x3F5D2D53, 0x3F59F26A, 0x3F5695E5,\n      0x3F531849, 0x3F4F7A1F, 0x3F4BBBF8, 0x3F47DE65, 0x3F43E200, 0x3F3FC767, 0x3F3B8F3B, 0x3F373A23,\n      0x3F7FFB11, 0x3F7FD397, 0x3F7F84AB, 0x3F7F0E58, 0x3F7E70B0, 0x3F7DABCC, 0x3F7CBFC9, 0x3F7BACCD,\n      0x3F7A7302, 0x3F791298, 0x3F778BC5, 0x3F75DEC6, 0x3F740BDD, 0x3F721352, 0x3F6FF573, 0x3F6DB293,\n      0x3F6B4B0C, 0x3F68BF3C, 0x3F660F88, 0x3F633C5A, 0x3F604621, 0x3F5D2D53, 0x3F59F26A, 0x3F5695E5,\n      0x3F531849, 0x3F4F7A1F, 0x3F4BBBF8, 0x3F47DE65, 0x3F43E200, 0x3F3FC767, 0x3F3B8F3B, 0x3F373A23,\n    ]),\n    arrayIntToFloat([\n      0x3F7FFEC4, 0x3F7FF4E6, 0x3F7FE129, 0x3F7FC38F, 0x3F7F9C18, 0x3F7F6AC7, 0x3F7F2F9D, 0x3F7EEA9D,\n      0x3F7E9BC9, 0x3F7E4323, 0x3F7DE0B1, 0x3F7D7474, 0x3F7CFE73, 0x3F7C7EB0, 0x3F7BF531, 0x3F7B61FC,\n      0x3F7AC516, 0x3F7A1E84, 0x3F796E4E, 0x3F78B47B, 0x3F77F110, 0x3F772417, 0x3F764D97, 0x3F756D97,\n      0x3F748422, 0x3F73913F, 0x3F7294F8, 0x3F718F57, 0x3F708066, 0x3F6F6830, 0x3F6E46BE, 0x3F6D1C1D,\n      0x3F6BE858, 0x3F6AAB7B, 0x3F696591, 0x3F6816A8, 0x3F66BECC, 0x3F655E0B, 0x3F63F473, 0x3F628210,\n      0x3F6106F2, 0x3F5F8327, 0x3F5DF6BE, 0x3F5C61C7, 0x3F5AC450, 0x3F591E6A, 0x3F577026, 0x3F55B993,\n      0x3F53FAC3, 0x3F5233C6, 0x3F5064AF, 0x3F4E8D90, 0x3F4CAE79, 0x3F4AC77F, 0x3F48D8B3, 0x3F46E22A,\n      0x3F44E3F5, 0x3F42DE29, 0x3F40D0DA, 0x3F3EBC1B, 0x3F3CA003, 0x3F3A7CA4, 0x3F385216, 0x3F36206C,\n    ])\n  ],\n  list2Float: [\n    arrayIntToFloat([\n      0xBD0A8BD4, 0x3D0A8BD4, 0x3D0A8BD4, 0xBD0A8BD4, 0x3D0A8BD4, 0xBD0A8BD4, 0xBD0A8BD4, 0x3D0A8BD4,\n      0x3D0A8BD4, 0xBD0A8BD4, 0xBD0A8BD4, 0x3D0A8BD4, 0xBD0A8BD4, 0x3D0A8BD4, 0x3D0A8BD4, 0xBD0A8BD4,\n      0x3D0A8BD4, 0xBD0A8BD4, 0xBD0A8BD4, 0x3D0A8BD4, 0xBD0A8BD4, 0x3D0A8BD4, 0x3D0A8BD4, 0xBD0A8BD4,\n      0xBD0A8BD4, 0x3D0A8BD4, 0x3D0A8BD4, 0xBD0A8BD4, 0x3D0A8BD4, 0xBD0A8BD4, 0xBD0A8BD4, 0x3D0A8BD4,\n      0x3D0A8BD4, 0xBD0A8BD4, 0xBD0A8BD4, 0x3D0A8BD4, 0xBD0A8BD4, 0x3D0A8BD4, 0x3D0A8BD4, 0xBD0A8BD4,\n      0xBD0A8BD4, 0x3D0A8BD4, 0x3D0A8BD4, 0xBD0A8BD4, 0x3D0A8BD4, 0xBD0A8BD4, 0xBD0A8BD4, 0x3D0A8BD4,\n      0xBD0A8BD4, 0x3D0A8BD4, 0x3D0A8BD4, 0xBD0A8BD4, 0x3D0A8BD4, 0xBD0A8BD4, 0xBD0A8BD4, 0x3D0A8BD4,\n      0x3D0A8BD4, 0xBD0A8BD4, 0xBD0A8BD4, 0x3D0A8BD4, 0xBD0A8BD4, 0x3D0A8BD4, 0x3D0A8BD4, 0xBD0A8BD4,\n    ]),\n    arrayIntToFloat([\n      0xBE47C5C2, 0xBF0E39DA, 0x3E47C5C2, 0x3F0E39DA, 0x3E47C5C2, 0x3F0E39DA, 0xBE47C5C2, 0xBF0E39DA,\n      0x3E47C5C2, 0x3F0E39DA, 0xBE47C5C2, 0xBF0E39DA, 0xBE47C5C2, 0xBF0E39DA, 0x3E47C5C2, 0x3F0E39DA,\n      0x3E47C5C2, 0x3F0E39DA, 0xBE47C5C2, 0xBF0E39DA, 0xBE47C5C2, 0xBF0E39DA, 0x3E47C5C2, 0x3F0E39DA,\n      0xBE47C5C2, 0xBF0E39DA, 0x3E47C5C2, 0x3F0E39DA, 0x3E47C5C2, 0x3F0E39DA, 0xBE47C5C2, 0xBF0E39DA,\n      0x3E47C5C2, 0x3F0E39DA, 0xBE47C5C2, 0xBF0E39DA, 0xBE47C5C2, 0xBF0E39DA, 0x3E47C5C2, 0x3F0E39DA,\n      0xBE47C5C2, 0xBF0E39DA, 0x3E47C5C2, 0x3F0E39DA, 0x3E47C5C2, 0x3F0E39DA, 0xBE47C5C2, 0xBF0E39DA,\n      0xBE47C5C2, 0xBF0E39DA, 0x3E47C5C2, 0x3F0E39DA, 0x3E47C5C2, 0x3F0E39DA, 0xBE47C5C2, 0xBF0E39DA,\n      0x3E47C5C2, 0x3F0E39DA, 0xBE47C5C2, 0xBF0E39DA, 0xBE47C5C2, 0xBF0E39DA, 0x3E47C5C2, 0x3F0E39DA,\n    ]),\n    arrayIntToFloat([\n      0xBDC8BD36, 0xBE94A031, 0xBEF15AEA, 0xBF226799, 0x3DC8BD36, 0x3E94A031, 0x3EF15AEA, 0x3F226799,\n      0x3DC8BD36, 0x3E94A031, 0x3EF15AEA, 0x3F226799, 0xBDC8BD36, 0xBE94A031, 0xBEF15AEA, 0xBF226799,\n      0x3DC8BD36, 0x3E94A031, 0x3EF15AEA, 0x3F226799, 0xBDC8BD36, 0xBE94A031, 0xBEF15AEA, 0xBF226799,\n      0xBDC8BD36, 0xBE94A031, 0xBEF15AEA, 0xBF226799, 0x3DC8BD36, 0x3E94A031, 0x3EF15AEA, 0x3F226799,\n      0x3DC8BD36, 0x3E94A031, 0x3EF15AEA, 0x3F226799, 0xBDC8BD36, 0xBE94A031, 0xBEF15AEA, 0xBF226799,\n      0xBDC8BD36, 0xBE94A031, 0xBEF15AEA, 0xBF226799, 0x3DC8BD36, 0x3E94A031, 0x3EF15AEA, 0x3F226799,\n      0xBDC8BD36, 0xBE94A031, 0xBEF15AEA, 0xBF226799, 0x3DC8BD36, 0x3E94A031, 0x3EF15AEA, 0x3F226799,\n      0x3DC8BD36, 0x3E94A031, 0x3EF15AEA, 0x3F226799, 0xBDC8BD36, 0xBE94A031, 0xBEF15AEA, 0xBF226799,\n    ]),\n    arrayIntToFloat([\n      0xBD48FB30, 0xBE164083, 0xBE78CFCC, 0xBEAC7CD4, 0xBEDAE880, 0xBF039C3D, 0xBF187FC0, 0xBF2BEB4A,\n      0x3D48FB30, 0x3E164083, 0x3E78CFCC, 0x3EAC7CD4, 0x3EDAE880, 0x3F039C3D, 0x3F187FC0, 0x3F2BEB4A,\n      0x3D48FB30, 0x3E164083, 0x3E78CFCC, 0x3EAC7CD4, 0x3EDAE880, 0x3F039C3D, 0x3F187FC0, 0x3F2BEB4A,\n      0xBD48FB30, 0xBE164083, 0xBE78CFCC, 0xBEAC7CD4, 0xBEDAE880, 0xBF039C3D, 0xBF187FC0, 0xBF2BEB4A,\n      0x3D48FB30, 0x3E164083, 0x3E78CFCC, 0x3EAC7CD4, 0x3EDAE880, 0x3F039C3D, 0x3F187FC0, 0x3F2BEB4A,\n      0xBD48FB30, 0xBE164083, 0xBE78CFCC, 0xBEAC7CD4, 0xBEDAE880, 0xBF039C3D, 0xBF187FC0, 0xBF2BEB4A,\n      0xBD48FB30, 0xBE164083, 0xBE78CFCC, 0xBEAC7CD4, 0xBEDAE880, 0xBF039C3D, 0xBF187FC0, 0xBF2BEB4A,\n      0x3D48FB30, 0x3E164083, 0x3E78CFCC, 0x3EAC7CD4, 0x3EDAE880, 0x3F039C3D, 0x3F187FC0, 0x3F2BEB4A,\n    ]),\n    arrayIntToFloat([\n      0xBCC90AB0, 0xBD96A905, 0xBDFAB273, 0xBE2F10A2, 0xBE605C13, 0xBE888E93, 0xBEA09AE5, 0xBEB8442A,\n      0xBECF7BCA, 0xBEE63375, 0xBEFC5D27, 0xBF08F59B, 0xBF13682A, 0xBF1D7FD1, 0xBF273656, 0xBF3085BB,\n      0x3CC90AB0, 0x3D96A905, 0x3DFAB273, 0x3E2F10A2, 0x3E605C13, 0x3E888E93, 0x3EA09AE5, 0x3EB8442A,\n      0x3ECF7BCA, 0x3EE63375, 0x3EFC5D27, 0x3F08F59B, 0x3F13682A, 0x3F1D7FD1, 0x3F273656, 0x3F3085BB,\n      0x3CC90AB0, 0x3D96A905, 0x3DFAB273, 0x3E2F10A2, 0x3E605C13, 0x3E888E93, 0x3EA09AE5, 0x3EB8442A,\n      0x3ECF7BCA, 0x3EE63375, 0x3EFC5D27, 0x3F08F59B, 0x3F13682A, 0x3F1D7FD1, 0x3F273656, 0x3F3085BB,\n      0xBCC90AB0, 0xBD96A905, 0xBDFAB273, 0xBE2F10A2, 0xBE605C13, 0xBE888E93, 0xBEA09AE5, 0xBEB8442A,\n      0xBECF7BCA, 0xBEE63375, 0xBEFC5D27, 0xBF08F59B, 0xBF13682A, 0xBF1D7FD1, 0xBF273656, 0xBF3085BB,\n    ]),\n    arrayIntToFloat([\n      0xBC490E90, 0xBD16C32C, 0xBD7B2B74, 0xBDAFB680, 0xBDE1BC2E, 0xBE09CF86, 0xBE22ABB6, 0xBE3B6ECF,\n      0xBE541501, 0xBE6C9A7F, 0xBE827DC0, 0xBE8E9A22, 0xBE9AA086, 0xBEA68F12, 0xBEB263EF, 0xBEBE1D4A,\n      0xBEC9B953, 0xBED53641, 0xBEE0924F, 0xBEEBCBBB, 0xBEF6E0CB, 0xBF00E7E4, 0xBF064B82, 0xBF0B9A6B,\n      0xBF10D3CD, 0xBF15F6D9, 0xBF1B02C6, 0xBF1FF6CB, 0xBF24D225, 0xBF299415, 0xBF2E3BDE, 0xBF32C8C9,\n      0x3C490E90, 0x3D16C32C, 0x3D7B2B74, 0x3DAFB680, 0x3DE1BC2E, 0x3E09CF86, 0x3E22ABB6, 0x3E3B6ECF,\n      0x3E541501, 0x3E6C9A7F, 0x3E827DC0, 0x3E8E9A22, 0x3E9AA086, 0x3EA68F12, 0x3EB263EF, 0x3EBE1D4A,\n      0x3EC9B953, 0x3ED53641, 0x3EE0924F, 0x3EEBCBBB, 0x3EF6E0CB, 0x3F00E7E4, 0x3F064B82, 0x3F0B9A6B,\n      0x3F10D3CD, 0x3F15F6D9, 0x3F1B02C6, 0x3F1FF6CB, 0x3F24D225, 0x3F299415, 0x3F2E3BDE, 0x3F32C8C9,\n    ]),\n    arrayIntToFloat([\n      0xBBC90F88, 0xBC96C9B6, 0xBCFB49BA, 0xBD2FE007, 0xBD621469, 0xBD8A200A, 0xBDA3308C, 0xBDBC3AC3,\n      0xBDD53DB9, 0xBDEE3876, 0xBE039502, 0xBE1008B7, 0xBE1C76DE, 0xBE28DEFC, 0xBE354098, 0xBE419B37,\n      0xBE4DEE60, 0xBE5A3997, 0xBE667C66, 0xBE72B651, 0xBE7EE6E1, 0xBE8586CE, 0xBE8B9507, 0xBE919DDD,\n      0xBE97A117, 0xBE9D9E78, 0xBEA395C5, 0xBEA986C4, 0xBEAF713A, 0xBEB554EC, 0xBEBB31A0, 0xBEC1071E,\n      0xBEC6D529, 0xBECC9B8B, 0xBED25A09, 0xBED8106B, 0xBEDDBE79, 0xBEE363FA, 0xBEE900B7, 0xBEEE9479,\n      0xBEF41F07, 0xBEF9A02D, 0xBEFF17B2, 0xBF0242B1, 0xBF04F484, 0xBF07A136, 0xBF0A48AD, 0xBF0CEAD0,\n      0xBF0F8784, 0xBF121EB0, 0xBF14B039, 0xBF173C07, 0xBF19C200, 0xBF1C420C, 0xBF1EBC12, 0xBF212FF9,\n      0xBF239DA9, 0xBF26050A, 0xBF286605, 0xBF2AC082, 0xBF2D1469, 0xBF2F61A5, 0xBF31A81D, 0xBF33E7BC,\n    ])\n  ],\n  list3Float: arrayIntToFloat([\n    0x3A3504F0, 0x3B0183B8, 0x3B70C538, 0x3BBB9268, 0x3C04A809, 0x3C308200, 0x3C61284C, 0x3C8B3F17,\n    0x3CA83992, 0x3CC77FBD, 0x3CE91110, 0x3D0677CD, 0x3D198FC4, 0x3D2DD35C, 0x3D434643, 0x3D59ECC1,\n    0x3D71CBA8, 0x3D85741E, 0x3D92A413, 0x3DA078B4, 0x3DAEF522, 0x3DBE1C9E, 0x3DCDF27B, 0x3DDE7A1D,\n    0x3DEFB6ED, 0x3E00D62B, 0x3E0A2EDA, 0x3E13E72A, 0x3E1E00B1, 0x3E287CF2, 0x3E335D55, 0x3E3EA321,\n    0x3E4A4F75, 0x3E56633F, 0x3E62DF37, 0x3E6FC3D1, 0x3E7D1138, 0x3E8563A2, 0x3E8C72B7, 0x3E93B561,\n    0x3E9B2AEF, 0x3EA2D26F, 0x3EAAAAAB, 0x3EB2B222, 0x3EBAE706, 0x3EC34737, 0x3ECBD03D, 0x3ED47F46,\n    0x3EDD5128, 0x3EE6425C, 0x3EEF4EFF, 0x3EF872D7, 0x3F00D4A9, 0x3F0576CA, 0x3F0A1D3B, 0x3F0EC548,\n    0x3F136C25, 0x3F180EF2, 0x3F1CAAC2, 0x3F213CA2, 0x3F25C1A5, 0x3F2A36E7, 0x3F2E9998, 0x3F32E705,\n    0xBF371C9E, 0xBF3B37FE, 0xBF3F36F2, 0xBF431780, 0xBF46D7E6, 0xBF4A76A4, 0xBF4DF27C, 0xBF514A6F,\n    0xBF547DC5, 0xBF578C03, 0xBF5A74EE, 0xBF5D3887, 0xBF5FD707, 0xBF6250DA, 0xBF64A699, 0xBF66D908,\n    0xBF68E90E, 0xBF6AD7B1, 0xBF6CA611, 0xBF6E5562, 0xBF6FE6E7, 0xBF715BEF, 0xBF72B5D1, 0xBF73F5E6,\n    0xBF751D89, 0xBF762E13, 0xBF7728D7, 0xBF780F20, 0xBF78E234, 0xBF79A34C, 0xBF7A5397, 0xBF7AF439,\n    0xBF7B8648, 0xBF7C0ACE, 0xBF7C82C8, 0xBF7CEF26, 0xBF7D50CB, 0xBF7DA88E, 0xBF7DF737, 0xBF7E3D86,\n    0xBF7E7C2A, 0xBF7EB3CC, 0xBF7EE507, 0xBF7F106C, 0xBF7F3683, 0xBF7F57CA, 0xBF7F74B6, 0xBF7F8DB6,\n    0xBF7FA32E, 0xBF7FB57B, 0xBF7FC4F6, 0xBF7FD1ED, 0xBF7FDCAD, 0xBF7FE579, 0xBF7FEC90, 0xBF7FF22E,\n    0xBF7FF688, 0xBF7FF9D0, 0xBF7FFC32, 0xBF7FFDDA, 0xBF7FFEED, 0xBF7FFF8F, 0xBF7FFFDF, 0xBF7FFFFC,\n  ])\n\n};\nfunction decode5(channel, index) {\n  let s = channel.block, d = channel.wav1;\n  for (let i = 0, count1 = 1, count2 = 0x40; i < 7; i++ , count1 <<= 1, count2 >>>= 1) {\n    let x = 0, d1 = 0, d2 = count2;\n    for (let j = 0; j < count1; j++) {\n      for (let k = 0; k < count2; k++) {\n        const a = s[x++];\n        const b = s[x++];\n        d[d1++] = b + a;\n        d[d2++] = a - b;\n      }\n      d1 += count2;\n      d2 += count2;\n    }\n    const w = s; s = d; d = w;\n  }\n  s = channel.wav1; d = channel.block;\n  for (let i = 0, count1 = 0x40, count2 = 1; i < 7; i++ , count1 >>>= 1, count2 <<= 1) {\n    const list1Float = DECODE5.list1Float[i];\n    const list2Float = DECODE5.list2Float[i];\n    let x = 0, y = 0, s1 = 0, s2 = count2, d1 = 0, d2 = count2 * 2 - 1;\n    for (let j = 0; j < count1; j++) {\n      for (let k = 0; k < count2; k++) {\n        const a = s[s1++];\n        const b = s[s2++];\n        const c = list1Float[x++];\n        const e = list2Float[y++];\n        d[d1++] = a * c - b * e;\n        d[d2--] = a * e + b * c;\n      }\n      s1 += count2;\n      s2 += count2;\n      d1 += count2;\n      d2 += count2 * 3;\n    }\n    const w = s; s = d; d = w;\n  }\n  d = channel.wav2;\n  for (let i = 0; i < 0x80; i++) d[i] = s[i];\n  s = DECODE5.list3Float; d = channel.wave[index];\n  let s1 = channel.wav2, s2 = channel.wav3;\n  for (let i = 0; i < 0x40; i++) d[i] = s1[0x40 + i] * s[i] + s2[i];\n  for (let i = 0; i < 0x40; i++) d[0x40 + i] = s[0x40 + i] * s1[0x7f - i] - s2[0x40 + i];\n  for (let i = 0; i < 0x40; i++) s2[i] = s1[0x3f - i] * s[0x7f - i];\n  for (let i = 0; i < 0x40; i++) s2[0x40 + i] = s[0x3f - i] * s1[i];\n}\n\nfunction decodeBlock(hca, buffer, address) {\n  const block = buffer.slice(address, address + hca.blockSize);\n  if (checkSum(block, hca.blockSize)) return false;\n  if (hca.ciphType) decryptBlock(hca.ciphTable, block);\n  const reader = new BlockReader(block);\n  const magic = reader.getBit(16);\n  if (magic === 0xFFFF) {\n    const a = (reader.getBit(9) << 8) - reader.getBit(7);\n    const comp = hca.comp;\n    for (let i = 0; i < hca.channelCount; i++) {\n      decode1(hca.channels[i], reader, comp.r09, a, hca.athTable);\n    }\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < hca.channelCount; j++) decode2(hca.channels[j], reader);\n      for (let j = 0; j < hca.channelCount; j++) decode3(hca.channels[j], comp.r09, comp.r08, comp.r07 + comp.r06, comp.r05);\n      for (let j = 0; j < hca.channelCount - 1; j++) decode4(hca.channels[j], hca.channels[j + 1], i, comp.r05 - comp.r06, comp.r06, comp.r07);\n      for (let j = 0; j < hca.channelCount; j++) decode5(hca.channels[j], i);\n    }\n  }\n  return true;\n}\n\nasync function decodeHca(buffer, key, awbKey, volume) {\n  if (volume === undefined || volume === null) volume = 1.0;\n  if (typeof (buffer) === 'string') buffer = await readFile(buffer);\n  const hca = parseHCA(buffer, key, awbKey);\n  if (!hca) throw new Error(`Not HCA File`);\n  if (!initDecode(hca)) throw new Error(`Init Decode Failed`);\n  let n = 0, address = hca.dataOffset;\n  const pcmData = new Float32Array(hca.blockCount * 8 * 0x80 * hca.channelCount);\n  for (let m = 0; m < hca.blockCount; m++ , address += hca.blockSize) {\n    if (!decodeBlock(hca, buffer, address)) throw new Error(`Decode Error`);\n    for (let i = 0; i < 8; i++) {\n      for (let j = 0; j < 0x80; j++) {\n        for (let k = 0; k < hca.channelCount; k++) {\n          pcmData[n++] = hca.channels[k].wave[i][j] * hca.volume * volume;\n        }\n      }\n    }\n  }\n  hca.pcmData = pcmData;\n  return hca;\n}\nexports.decodeHca = decodeHca;\n\nasync function writeWavFile(wavPath, mode, channelCount, samplingRate, pcmData) {\n  const wavRiff = Buffer.alloc(36);\n  wavRiff.write('RIFF', 0);\n  wavRiff.write('WAVEfmt ', 8);\n  wavRiff.writeUInt32LE(0x10, 0x10);\n  const wavData = Buffer.alloc(8);\n  wavData.write('data', 0);\n  const wav = {};\n  wav.fmtType = (mode > 0) ? 1 : 3;\n  wav.fmtChannelCount = channelCount;\n  wav.fmtBitCount = (mode > 0) ? mode : 32;\n  wav.fmtSamplingRate = samplingRate;\n  wav.fmtSamplingSize = Math.floor(wav.fmtBitCount / 8 * wav.fmtChannelCount);\n  wav.fmtSamplesPerSec = wav.fmtSamplingRate * wav.fmtSamplingSize;\n  wavRiff.writeUInt16LE(wav.fmtType, 0x14);\n  wavRiff.writeUInt16LE(wav.fmtChannelCount, 0x16);\n  wavRiff.writeUInt32LE(wav.fmtSamplingRate, 0x18);\n  wavRiff.writeUInt32LE(wav.fmtSamplesPerSec, 0x1C);\n  wavRiff.writeUInt32LE(wav.fmtSamplingSize, 0x20);\n  wavRiff.writeUInt16LE(wav.fmtBitCount, 0x22);\n  wav.dataSize = Math.floor(pcmData.length * wav.fmtSamplingSize / channelCount);\n  wav.riffSize = 0x1C + wavData.length + wav.dataSize;\n  wavData.writeUInt32LE(wav.dataSize, 0x4);\n  wavRiff.writeUInt32LE(wav.riffSize, 0x4);\n  await writeFile(wavPath, Buffer.concat([wavRiff, wavData]));\n  const buffer = Buffer.alloc(0xFFFFF);\n  let n = 0, once = 0;\n  for (let i = 0; i < pcmData.length; i++) {\n    let f = pcmData[i];\n    if (f > 1) { f = 1; } else if (f < -1) { f = -1; }\n    switch (mode) {\n      case 0:\n        buffer.writeFloatLE(f, n);\n        n += 4;\n        break;\n      case 8:\n        buffer.writeInt8(Math.floor(f * 0x7F) + 0x80, n);\n        n += 1;\n        break;\n      case 16:\n        buffer.writeInt16LE(Math.floor(f * 0x7FFF), n);\n        n += 2;\n        break;\n      case 24:\n        buffer.writeInt32LE(Math.floor(f * 0x7FFFFF), n);\n        n += 3;\n        break;\n      case 32:\n        buffer.writeInt32LE(Math.floor(f * 0x7FFFFFFF), n);\n        n += 4;\n        break;\n    }\n    if (once === 0) once = n;\n    if (n + once > buffer.length) {\n      await appendFile(wavPath, buffer.slice(0, n));\n      n = 0;\n    }\n  }\n  if (n > 0) await appendFile(wavPath, buffer.slice(0, n));\n}\nexports.writeWavFile = writeWavFile;\n\nasync function decodeHcaToWav(buffer, key, awbKey, wavPath, volume, mode) {\n  if (mode === undefined || mode === null) mode = 16;\n  if (typeof (buffer) === 'string') {\n    const pathInfo = path.parse(buffer);\n    console.log(`Reading ${pathInfo.base}...`);\n    if (wavPath === undefined) wavPath = path.join(pathInfo.dir, pathInfo.name + '.wav');\n  }\n  const hca = await decodeHca(buffer, key, awbKey, volume);\n  // console.log(`Writing ${path.parse(wavPath).base}...`);\n  await writeWavFile(wavPath, mode, hca.channelCount, hca.samplingRate, hca.pcmData);\n}\nexports.decodeHcaToWav = decodeHcaToWav;\n"],"sourceRoot":""}